<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="a00044" kind="file" language="C++">
    <compoundname>VkEngine.cpp</compoundname>
    <includes refid="a00047" local="yes">VkEngine.h</includes>
    <includes refid="a00053" local="yes">VkImages.h</includes>
    <includes refid="a00071" local="yes">VkPipelines.h</includes>
    <includes local="no">vk_mem_alloc.h</includes>
    <includes local="no">imgui.h</includes>
    <includes local="no">backends/imgui_impl_glfw.h</includes>
    <includes local="no">backends/imgui_impl_vulkan.h</includes>
    <incdepgraph>
      <node id="34">
        <label>Camera.h</label>
        <link refid="a00035"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>VkDescriptors.h</label>
        <link refid="a00041"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>VkEngine.cpp</label>
        <link refid="a00044"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>VkEngine.h</label>
        <link refid="a00047"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>VkImages.h</label>
        <link refid="a00053"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>VkInitializers.h</label>
        <link refid="a00059"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>VkLoader.h</label>
        <link refid="a00065"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>VkPipelines.h</label>
        <link refid="a00071"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>VkTypes.h</label>
        <link refid="a00074"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>GLFW/glfw3.h</label>
      </node>
      <node id="19">
        <label>VkBootstrap.h</label>
      </node>
      <node id="10">
        <label>array</label>
      </node>
      <node id="39">
        <label>backends/imgui_impl_glfw.h</label>
      </node>
      <node id="40">
        <label>backends/imgui_impl_vulkan.h</label>
      </node>
      <node id="14">
        <label>chrono</label>
      </node>
      <node id="12">
        <label>deque</label>
      </node>
      <node id="32">
        <label>fastgltf/core.hpp</label>
      </node>
      <node id="30">
        <label>fastgltf/glm_element_traits.hpp</label>
      </node>
      <node id="31">
        <label>fastgltf/tools.hpp</label>
      </node>
      <node id="33">
        <label>fastgltf/util.hpp</label>
      </node>
      <node id="28">
        <label>filesystem</label>
      </node>
      <node id="37">
        <label>fstream</label>
      </node>
      <node id="11">
        <label>functional</label>
      </node>
      <node id="24">
        <label>glm/common.hpp</label>
      </node>
      <node id="23">
        <label>glm/glm.hpp</label>
      </node>
      <node id="29">
        <label>glm/gtx/quaternion.hpp</label>
      </node>
      <node id="21">
        <label>glm/mat4x4.hpp</label>
      </node>
      <node id="22">
        <label>glm/vec4.hpp</label>
      </node>
      <node id="38">
        <label>imgui.h</label>
      </node>
      <node id="5">
        <label>memory</label>
      </node>
      <node id="6">
        <label>optional</label>
      </node>
      <node id="9">
        <label>span</label>
      </node>
      <node id="20">
        <label>spdlog/spdlog.h</label>
      </node>
      <node id="7">
        <label>string</label>
      </node>
      <node id="15">
        <label>thread</label>
      </node>
      <node id="27">
        <label>unordered_map</label>
      </node>
      <node id="8">
        <label>vector</label>
      </node>
      <node id="18">
        <label>vk_mem_alloc.h</label>
      </node>
      <node id="17">
        <label>vulkan/vk_enum_string_helper.h</label>
      </node>
      <node id="16">
        <label>vulkan/vulkan.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="a00044_1abea80547807da765ebe9fce1c6dd6a8d" prot="public" static="no">
        <name>VMA_IMPLEMENTATION</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/allos/source/Catos/Runtime/src/Renderer/VkEngine.cpp" line="11" column="9" bodyfile="C:/Users/allos/source/Catos/Runtime/src/Renderer/VkEngine.cpp" bodystart="11" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="a00044_1a0f2bcd236403cd740db7ed89ec4e392f" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool bUseValidationLayers</definition>
        <argsstring></argsstring>
        <name>bUseValidationLayers</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/allos/source/Catos/Runtime/src/Renderer/VkEngine.cpp" line="20" column="16" bodyfile="C:/Users/allos/source/Catos/Runtime/src/Renderer/VkEngine.cpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a00044_1a3180bc6bf9f297afa593d69886a475fb" prot="public" static="no" mutable="no">
        <type><ref refid="a00217" kindref="compound">VulkanEngine</ref> *</type>
        <definition>VulkanEngine* loadedEngine</definition>
        <argsstring></argsstring>
        <name>loadedEngine</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/allos/source/Catos/Runtime/src/Renderer/VkEngine.cpp" line="22" column="14" bodyfile="C:/Users/allos/source/Catos/Runtime/src/Renderer/VkEngine.cpp" bodystart="22" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>allos<sp/>on<sp/>2/10/2024.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Includes<sp/>and<sp/>stuff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="a00047" kindref="compound">VkEngine.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="a00053" kindref="compound">VkImages.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="a00071" kindref="compound">VkPipelines.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VMA_IMPLEMENTATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vk_mem_alloc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Imgui<sp/>includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;imgui.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;backends/imgui_impl_glfw.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;backends/imgui_impl_vulkan.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="a00044_1a0f2bcd236403cd740db7ed89ec4e392f" kindref="member">bUseValidationLayers</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><ref refid="a00217" kindref="compound">VulkanEngine</ref>*<sp/><ref refid="a00044_1a3180bc6bf9f297afa593d69886a475fb" kindref="member">loadedEngine</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><ref refid="a00217" kindref="compound">VulkanEngine</ref>&amp;<sp/><ref refid="a00217_1aac690da9ffba122c6f145e27fda36e05" kindref="member">VulkanEngine::Get</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*<ref refid="a00044_1a3180bc6bf9f297afa593d69886a475fb" kindref="member">loadedEngine</ref>;<sp/>};</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a00217_1a605027f7ed6fcd0d1861ebd72c5c5858" kindref="member">VulkanEngine::Init</ref>(GLFWwindow*<sp/>renderWindow,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_displayDebugMenu)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="a00044_1a3180bc6bf9f297afa593d69886a475fb" kindref="member">loadedEngine</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00044_1a3180bc6bf9f297afa593d69886a475fb" kindref="member">loadedEngine</ref><sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!glfwInit())<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::error(</highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>initialize<sp/>GLFW\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00217_1a66a9cc0c8097072f24c38e687bf4a51a" kindref="member">_window</ref><sp/>=<sp/>renderWindow;</highlight><highlight class="comment">//glfwCreateWindow(800,<sp/>600,<sp/>&quot;Atomus<sp/>0.0.1&quot;,<sp/>nullptr,<sp/>nullptr);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="a00217_1a66a9cc0c8097072f24c38e687bf4a51a" kindref="member">_window</ref>)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::error(</highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>recognize<sp/>the<sp/>GLFW<sp/>window\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glfwTerminate();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::info(</highlight><highlight class="stringliteral">&quot;recognized<sp/>the<sp/>Window<sp/>Successfully!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>vulkan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::info(</highlight><highlight class="stringliteral">&quot;initializing<sp/>Vulkan!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initVulkan();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initSwapchain();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initCommands();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initSyncStructures();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initDescriptors();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initPipelines();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initImGui();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initDefaultData();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*std::string<sp/>structurePath<sp/>=<sp/>{&quot;..//..//Assets/structure_mat.glb&quot;};</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>auto<sp/>structureFile<sp/>=<sp/>VkLoader::loadGltf(this,<sp/>structurePath);</highlight></codeline>
<codeline lineno="72"><highlight class="comment"></highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(structureFile.has_value());</highlight></codeline>
<codeline lineno="74"><highlight class="comment"></highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loadedScenes[&quot;structure&quot;]<sp/>=<sp/>*structureFile;*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00217_1af958cc75522e578ad3b4837d362e42ee" kindref="member">displayDebugMenu</ref><sp/>=<sp/>_displayDebugMenu;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00217_1a59d1bdeb91fc7a6b072dd41db890f317" kindref="member">_isInitialized</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mainCamera.position.z<sp/>=<sp/>5;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VulkanEngine::initDescriptors()<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;DescriptorAllocatorGrowable::PoolSizeRatio&gt;<sp/>sizes<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{VK_DESCRIPTOR_TYPE_STORAGE_IMAGE,<sp/>1}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>10<sp/>sets<sp/>with<sp/>1<sp/>image<sp/>each</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1a429373e20598afe382d2d5ea1e5f32a3" kindref="member">globalDescriptorAllocator</ref>.<ref refid="a00169_1af5cae4856149623867934153486e9b45" kindref="member">init</ref>(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/>10,<sp/>sizes);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00157" kindref="compound">DescriptorLayoutBuilder</ref><sp/>builder;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>builder.<ref refid="a00157_1afc94cce99812e98162990b38dc7a2fd0" kindref="member">addBinding</ref>(0,<sp/>VK_DESCRIPTOR_TYPE_STORAGE_IMAGE);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00217_1a510b5529eca5876823392263a245f45e" kindref="member">_drawImageDescriptorLayout</ref><sp/>=<sp/>builder.<ref refid="a00157_1a797241e8070455929166f95a9de86163" kindref="member">build</ref>(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/>VK_SHADER_STAGE_COMPUTE_BIT);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00157" kindref="compound">DescriptorLayoutBuilder</ref><sp/>builder;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>builder.<ref refid="a00157_1afc94cce99812e98162990b38dc7a2fd0" kindref="member">addBinding</ref>(0,<sp/>VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00217_1a52aa7ad2d968f8dac3c98fe8e5f4a0ed" kindref="member">_gpuSceneDataDescriptorLayout</ref><sp/>=<sp/>builder.<ref refid="a00157_1a797241e8070455929166f95a9de86163" kindref="member">build</ref>(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/>VK_SHADER_STAGE_VERTEX_BIT<sp/>|<sp/>VK_SHADER_STAGE_FRAGMENT_BIT);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00217_1ab1707a6b3122db0d0fce56c13999367b" kindref="member">_mainDeletionQueue</ref>.<ref refid="a00285_1a91bdce3808d2f96671f38a610810c67b" kindref="member">pushFunction</ref>([&amp;]()<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkDestroyDescriptorSetLayout(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/><ref refid="a00217_1a52aa7ad2d968f8dac3c98fe8e5f4a0ed" kindref="member">_gpuSceneDataDescriptorLayout</ref>,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00157" kindref="compound">DescriptorLayoutBuilder</ref><sp/>builder;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>builder.<ref refid="a00157_1afc94cce99812e98162990b38dc7a2fd0" kindref="member">addBinding</ref>(0,<sp/>VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00217_1a2d6c74d128b5dc95ce311ad39dac81f8" kindref="member">_singleImageDescriptorLayout</ref><sp/>=<sp/>builder.<ref refid="a00157_1a797241e8070455929166f95a9de86163" kindref="member">build</ref>(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/>VK_SHADER_STAGE_FRAGMENT_BIT);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00217_1ab1707a6b3122db0d0fce56c13999367b" kindref="member">_mainDeletionQueue</ref>.<ref refid="a00285_1a91bdce3808d2f96671f38a610810c67b" kindref="member">pushFunction</ref>([&amp;]()<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkDestroyDescriptorSetLayout(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/><ref refid="a00217_1a2d6c74d128b5dc95ce311ad39dac81f8" kindref="member">_singleImageDescriptorLayout</ref>,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Allocator<sp/>a<sp/>descriptor<sp/>set<sp/>for<sp/>the<sp/>draw<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1adcf4fd54a9568717d52fc711b1ff8593" kindref="member">_drawImageDescriptors</ref><sp/>=<sp/><ref refid="a00217_1a429373e20598afe382d2d5ea1e5f32a3" kindref="member">globalDescriptorAllocator</ref>.<ref refid="a00169_1a6db84a1399339f8008d6a0745383b591" kindref="member">allocate</ref>(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/><ref refid="a00217_1a510b5529eca5876823392263a245f45e" kindref="member">_drawImageDescriptorLayout</ref>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00177" kindref="compound">DescriptorWriter</ref><sp/>writer;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>writer.<ref refid="a00177_1a2a892146e50f1e47f2e5e2f84fb0eb66" kindref="member">writeImage</ref>(0,<sp/><ref refid="a00217_1ad332e0c9421b787d1805a642c6a04c70" kindref="member">_drawImage</ref>.<ref refid="a00289_1ad124234921b26ec7e9b0cc5f603d5726" kindref="member">imageView</ref>,<sp/>VK_NULL_HANDLE,<sp/>VK_IMAGE_LAYOUT_GENERAL,<sp/>VK_DESCRIPTOR_TYPE_STORAGE_IMAGE);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>writer.<ref refid="a00177_1aa6d2deed567c313417fc333e55647814" kindref="member">updateSet</ref>(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/><ref refid="a00217_1adcf4fd54a9568717d52fc711b1ff8593" kindref="member">_drawImageDescriptors</ref>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1ab1707a6b3122db0d0fce56c13999367b" kindref="member">_mainDeletionQueue</ref>.<ref refid="a00285_1a91bdce3808d2f96671f38a610810c67b" kindref="member">pushFunction</ref>([&amp;]()<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkDestroyDescriptorSetLayout(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/><ref refid="a00217_1a510b5529eca5876823392263a245f45e" kindref="member">_drawImageDescriptorLayout</ref>,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="a00047_1a10ae962afdbd2c033a5c3af07aea14c2" kindref="member">FRAME_OVERLAP</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;DescriptorAllocatorGrowable::PoolSizeRatio&gt;<sp/>frame_sizes<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>VK_DESCRIPTOR_TYPE_STORAGE_IMAGE,<sp/>3},</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>VK_DESCRIPTOR_TYPE_STORAGE_BUFFER,<sp/>3},</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER,<sp/>3},</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER,<sp/>4},</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00217_1a43719b6bfc0dfb7b725e254b46716815" kindref="member">_frames</ref>[i].<ref refid="a00181_1a8a642e7d6c19cc5ff3340c5e4d267188" kindref="member">_frameDescriptors</ref><sp/>=<sp/><ref refid="a00169" kindref="compound">DescriptorAllocatorGrowable</ref>{};</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00217_1a43719b6bfc0dfb7b725e254b46716815" kindref="member">_frames</ref>[i].<ref refid="a00181_1a8a642e7d6c19cc5ff3340c5e4d267188" kindref="member">_frameDescriptors</ref>.<ref refid="a00169_1af5cae4856149623867934153486e9b45" kindref="member">init</ref>(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/>1000,<sp/>frame_sizes);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00217_1ab1707a6b3122db0d0fce56c13999367b" kindref="member">_mainDeletionQueue</ref>.<ref refid="a00285_1a91bdce3808d2f96671f38a610810c67b" kindref="member">pushFunction</ref>([&amp;,<sp/>i]()<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00217_1a43719b6bfc0dfb7b725e254b46716815" kindref="member">_frames</ref>[i].<ref refid="a00181_1a8a642e7d6c19cc5ff3340c5e4d267188" kindref="member">_frameDescriptors</ref>.<ref refid="a00169_1a9be93476cebaaba27b5e6a41650b1c25" kindref="member">destroyPools</ref>(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a00217_1ae4b64b3a0c41f17e36339146bb0c15f9" kindref="member">VulkanEngine::CleanUp</ref>()</highlight></codeline>
<codeline lineno="148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="a00217_1a59d1bdeb91fc7a6b072dd41db890f317" kindref="member">_isInitialized</ref>)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::info(</highlight><highlight class="stringliteral">&quot;Destroying<sp/>current<sp/>loaded<sp/>engine&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkDeviceWaitIdle(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>obj<sp/>:<sp/><ref refid="a00217_1a5c648ce299b62a216ca42cb762cb0758" kindref="member">loadedScenes</ref>)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj.second-&gt;clearAll();</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00217_1a5c648ce299b62a216ca42cb762cb0758" kindref="member">loadedScenes</ref>.clear();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/><ref refid="a00047_1a10ae962afdbd2c033a5c3af07aea14c2" kindref="member">FRAME_OVERLAP</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkDestroyCommandPool(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/><ref refid="a00217_1a43719b6bfc0dfb7b725e254b46716815" kindref="member">_frames</ref>[i]._commandPool,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>destroy<sp/>sync<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkDestroyFence(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/><ref refid="a00217_1a43719b6bfc0dfb7b725e254b46716815" kindref="member">_frames</ref>[i]._renderFence,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkDestroySemaphore(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/><ref refid="a00217_1a43719b6bfc0dfb7b725e254b46716815" kindref="member">_frames</ref>[i]._renderSemaphore,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkDestroySemaphore(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/><ref refid="a00217_1a43719b6bfc0dfb7b725e254b46716815" kindref="member">_frames</ref>[i]._swapchainSemaphore,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00217_1a43719b6bfc0dfb7b725e254b46716815" kindref="member">_frames</ref>[i].<ref refid="a00181_1aca8a4d6ba793aa45bee87a83dca1a2e7" kindref="member">_deletionQueue</ref>.<ref refid="a00285_1ad8258e84b869dbf3800178a61cc51cb3" kindref="member">flush</ref>();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00217_1ab1707a6b3122db0d0fce56c13999367b" kindref="member">_mainDeletionQueue</ref>.<ref refid="a00285_1ad8258e84b869dbf3800178a61cc51cb3" kindref="member">flush</ref>();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destroySwapchain();</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00217_1a429373e20598afe382d2d5ea1e5f32a3" kindref="member">globalDescriptorAllocator</ref>.<ref refid="a00169_1a9be93476cebaaba27b5e6a41650b1c25" kindref="member">destroyPools</ref>(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkDestroySurfaceKHR(<ref refid="a00217_1a85897f1180282b72d30b55dda1fe1045" kindref="member">_instance</ref>,<sp/><ref refid="a00217_1ac5f5f041d67a7983769cc80255bead65" kindref="member">_surface</ref>,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkDestroyDevice(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkb::destroy_debug_utils_messenger(<ref refid="a00217_1a85897f1180282b72d30b55dda1fe1045" kindref="member">_instance</ref>,<sp/><ref refid="a00217_1aafc8bafd1ba65127ce2720de635e1231" kindref="member">_debugMessenger</ref>);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkDestroyInstance(<ref refid="a00217_1a85897f1180282b72d30b55dda1fe1045" kindref="member">_instance</ref>,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glfwDestroyWindow(_window);</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glfwTerminate();*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::info(</highlight><highlight class="stringliteral">&quot;Successfully<sp/>destroyed<sp/>current<sp/>loaded<sp/>engine&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>engine<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00044_1a3180bc6bf9f297afa593d69886a475fb" kindref="member">loadedEngine</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a00217_1ab9ac14fa153808cb5e7f00c53e38ec3e" kindref="member">VulkanEngine::Draw</ref>()</highlight></codeline>
<codeline lineno="193"><highlight class="normal">{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//wait<sp/>until<sp/>the<sp/>gpu<sp/>has<sp/>finished<sp/>rendering<sp/>the<sp/>last<sp/>frame.<sp/>Timeout<sp/>of<sp/>1<sp/>second</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00074_1a3d55e176cc77828a9adaa05ac4413b99" kindref="member">VK_CHECK</ref>(vkWaitForFences(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/>1,<sp/>&amp;<ref refid="a00217_1aa93d515ee250059976f8b84bd5599ac0" kindref="member">getCurrentFrame</ref>()._renderFence,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>1000000000));</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1aa93d515ee250059976f8b84bd5599ac0" kindref="member">getCurrentFrame</ref>().<ref refid="a00181_1aca8a4d6ba793aa45bee87a83dca1a2e7" kindref="member">_deletionQueue</ref>.<ref refid="a00285_1ad8258e84b869dbf3800178a61cc51cb3" kindref="member">flush</ref>();</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1aa93d515ee250059976f8b84bd5599ac0" kindref="member">getCurrentFrame</ref>().<ref refid="a00181_1a8a642e7d6c19cc5ff3340c5e4d267188" kindref="member">_frameDescriptors</ref>.<ref refid="a00169_1a4fbeabc0aea9829cf922f7e9cce2fa53" kindref="member">clearPools</ref>(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//request<sp/>image<sp/>from<sp/>the<sp/>swapchain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>swapchainImageIndex;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>VkResult<sp/>e<sp/>=<sp/>vkAcquireNextImageKHR(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/><ref refid="a00217_1ac17fb4ee4cf0de62648debe8e4b05130" kindref="member">_swapchain</ref>,<sp/>1000000000,<sp/><ref refid="a00217_1aa93d515ee250059976f8b84bd5599ac0" kindref="member">getCurrentFrame</ref>()._swapchainSemaphore,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;swapchainImageIndex);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e<sp/>==<sp/>VK_ERROR_OUT_OF_DATE_KHR)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resizeRequested<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1acdf79fe860137de04a46809a804094e4" kindref="member">_drawExtent</ref>.height<sp/>=<sp/><sp/>std::min(<ref refid="a00217_1ae2b5b9f37a4dd77e909d6a87c3290885" kindref="member">_swapchainExtent</ref>.height,<sp/><ref refid="a00217_1ad332e0c9421b787d1805a642c6a04c70" kindref="member">_drawImage</ref>.<ref refid="a00289_1a3c0016e1c5c44bb21f336486da7c9d66" kindref="member">imageExtent</ref>.height)<sp/>*<sp/><ref refid="a00217_1a5c0ce388983da02a693f298f01f9f0ff" kindref="member">renderScale</ref>;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1acdf79fe860137de04a46809a804094e4" kindref="member">_drawExtent</ref>.width<sp/>=<sp/><sp/>std::min(<ref refid="a00217_1ae2b5b9f37a4dd77e909d6a87c3290885" kindref="member">_swapchainExtent</ref>.width,<sp/><ref refid="a00217_1ad332e0c9421b787d1805a642c6a04c70" kindref="member">_drawImage</ref>.<ref refid="a00289_1a3c0016e1c5c44bb21f336486da7c9d66" kindref="member">imageExtent</ref>.width)<sp/>*<sp/><ref refid="a00217_1a5c0ce388983da02a693f298f01f9f0ff" kindref="member">renderScale</ref>;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00074_1a3d55e176cc77828a9adaa05ac4413b99" kindref="member">VK_CHECK</ref>(vkResetFences(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/>1,<sp/>&amp;<ref refid="a00217_1aa93d515ee250059976f8b84bd5599ac0" kindref="member">getCurrentFrame</ref>()._renderFence));</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//now<sp/>that<sp/>we<sp/>are<sp/>sure<sp/>that<sp/>the<sp/>commands<sp/>finished<sp/>executing,<sp/>we<sp/>can<sp/>safely<sp/>reset<sp/>the<sp/>command<sp/>buffer<sp/>to<sp/>begin<sp/>recording<sp/>again.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00074_1a3d55e176cc77828a9adaa05ac4413b99" kindref="member">VK_CHECK</ref>(vkResetCommandBuffer(<ref refid="a00217_1aa93d515ee250059976f8b84bd5599ac0" kindref="member">getCurrentFrame</ref>()._mainCommandBuffer,<sp/>0));</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//naming<sp/>it<sp/>cmd<sp/>for<sp/>shorter<sp/>writing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>VkCommandBuffer<sp/>cmd<sp/>=<sp/><ref refid="a00217_1aa93d515ee250059976f8b84bd5599ac0" kindref="member">getCurrentFrame</ref>().<ref refid="a00181_1a0f7ce63c6449cafff984ccfaf99964d4" kindref="member">_mainCommandBuffer</ref>;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//begin<sp/>the<sp/>command<sp/>buffer<sp/>recording.<sp/>We<sp/>will<sp/>use<sp/>this<sp/>command<sp/>buffer<sp/>exactly<sp/>once,<sp/>so<sp/>we<sp/>want<sp/>to<sp/>let<sp/>vulkan<sp/>know<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>VkCommandBufferBeginInfo<sp/>cmdBeginInfo<sp/>=<sp/><ref refid="a00102_1a4f27583522b48fbb2794b4f6eff37c5b" kindref="member">VkInit::commandBufferBeginInfo</ref>(VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00074_1a3d55e176cc77828a9adaa05ac4413b99" kindref="member">VK_CHECK</ref>(vkBeginCommandBuffer(cmd,<sp/>&amp;cmdBeginInfo));</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>transition<sp/>our<sp/>main<sp/>draw<sp/>image<sp/>into<sp/>general<sp/>layout<sp/>so<sp/>we<sp/>can<sp/>write<sp/>into<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>will<sp/>overwrite<sp/>it<sp/>all<sp/>so<sp/>we<sp/>dont<sp/>care<sp/>about<sp/>what<sp/>was<sp/>the<sp/>older<sp/>layout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00101_1a875b1e47dc0c1a3d683aa56a048004a1" kindref="member">VkUtil::transitionImage</ref>(cmd,<sp/><ref refid="a00217_1ad332e0c9421b787d1805a642c6a04c70" kindref="member">_drawImage</ref>.<ref refid="a00289_1a13e4a58bd70b09a3743df9effc0dc9f6" kindref="member">image</ref>,<sp/>VK_IMAGE_LAYOUT_UNDEFINED,<sp/>VK_IMAGE_LAYOUT_GENERAL);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>drawBackground(cmd);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00101_1a875b1e47dc0c1a3d683aa56a048004a1" kindref="member">VkUtil::transitionImage</ref>(cmd,<sp/><ref refid="a00217_1ad332e0c9421b787d1805a642c6a04c70" kindref="member">_drawImage</ref>.<ref refid="a00289_1a13e4a58bd70b09a3743df9effc0dc9f6" kindref="member">image</ref>,<sp/>VK_IMAGE_LAYOUT_GENERAL,<sp/>VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00101_1a875b1e47dc0c1a3d683aa56a048004a1" kindref="member">VkUtil::transitionImage</ref>(cmd,<sp/><ref refid="a00217_1a20eff0d0f15bd84d364edb01d8cb340d" kindref="member">_depthImage</ref>.<ref refid="a00289_1a13e4a58bd70b09a3743df9effc0dc9f6" kindref="member">image</ref>,<sp/>VK_IMAGE_LAYOUT_UNDEFINED,<sp/>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>drawGeometry(cmd);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//transtion<sp/>the<sp/>draw<sp/>image<sp/>and<sp/>the<sp/>swapchain<sp/>image<sp/>into<sp/>their<sp/>correct<sp/>transfer<sp/>layouts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00101_1a875b1e47dc0c1a3d683aa56a048004a1" kindref="member">VkUtil::transitionImage</ref>(cmd,<sp/><ref refid="a00217_1ad332e0c9421b787d1805a642c6a04c70" kindref="member">_drawImage</ref>.<ref refid="a00289_1a13e4a58bd70b09a3743df9effc0dc9f6" kindref="member">image</ref>,<sp/>VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL,<sp/>VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00101_1a875b1e47dc0c1a3d683aa56a048004a1" kindref="member">VkUtil::transitionImage</ref>(cmd,<sp/><ref refid="a00217_1a4f951e6fd307b7d08b28ef643be7e4fb" kindref="member">_swapchainImages</ref>[swapchainImageIndex],<sp/>VK_IMAGE_LAYOUT_UNDEFINED,<sp/>VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>execute<sp/>a<sp/>copy<sp/>from<sp/>the<sp/>draw<sp/>image<sp/>into<sp/>the<sp/>swapchain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00101_1aaf415273879926840c4ba3f273ced282" kindref="member">VkUtil::copyImageToImage</ref>(cmd,<sp/><ref refid="a00217_1ad332e0c9421b787d1805a642c6a04c70" kindref="member">_drawImage</ref>.<ref refid="a00289_1a13e4a58bd70b09a3743df9effc0dc9f6" kindref="member">image</ref>,<sp/><ref refid="a00217_1a4f951e6fd307b7d08b28ef643be7e4fb" kindref="member">_swapchainImages</ref>[swapchainImageIndex],<sp/><ref refid="a00217_1acdf79fe860137de04a46809a804094e4" kindref="member">_drawExtent</ref>,<ref refid="a00217_1ae2b5b9f37a4dd77e909d6a87c3290885" kindref="member">_swapchainExtent</ref>);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>swapchain<sp/>image<sp/>layout<sp/>to<sp/>Attachment<sp/>Optimal<sp/>so<sp/>we<sp/>can<sp/>draw<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00101_1a875b1e47dc0c1a3d683aa56a048004a1" kindref="member">VkUtil::transitionImage</ref>(cmd,<sp/><ref refid="a00217_1a4f951e6fd307b7d08b28ef643be7e4fb" kindref="member">_swapchainImages</ref>[swapchainImageIndex],<sp/>VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL,<sp/>VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//draw<sp/>imgui<sp/>into<sp/>the<sp/>swapchain<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>drawImgui(cmd,<sp/><ref refid="a00217_1a80ebb2acd6e6e88efaf9c7245c59079c" kindref="member">_swapchainImageViews</ref>[swapchainImageIndex]);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>swapchain<sp/>image<sp/>layout<sp/>to<sp/>Present<sp/>so<sp/>we<sp/>can<sp/>draw<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00101_1a875b1e47dc0c1a3d683aa56a048004a1" kindref="member">VkUtil::transitionImage</ref>(cmd,<sp/><ref refid="a00217_1a4f951e6fd307b7d08b28ef643be7e4fb" kindref="member">_swapchainImages</ref>[swapchainImageIndex],<sp/>VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL,<sp/>VK_IMAGE_LAYOUT_PRESENT_SRC_KHR);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//finalize<sp/>the<sp/>command<sp/>buffer<sp/>(we<sp/>can<sp/>no<sp/>longer<sp/>add<sp/>commands,<sp/>but<sp/>it<sp/>can<sp/>now<sp/>be<sp/>executed)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00074_1a3d55e176cc77828a9adaa05ac4413b99" kindref="member">VK_CHECK</ref>(vkEndCommandBuffer(cmd));</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//prepare<sp/>the<sp/>submission<sp/>to<sp/>the<sp/>queue.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//we<sp/>want<sp/>to<sp/>wait<sp/>on<sp/>the<sp/>_presentSemaphore,<sp/>as<sp/>that<sp/>semaphore<sp/>is<sp/>signaled<sp/>when<sp/>the<sp/>swapchain<sp/>is<sp/>ready</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//we<sp/>will<sp/>signal<sp/>the<sp/>_renderSemaphore,<sp/>to<sp/>signal<sp/>that<sp/>rendering<sp/>has<sp/>finished</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>VkCommandBufferSubmitInfo<sp/>cmdinfo<sp/>=<sp/><ref refid="a00102_1a4e3740324c0b56d48e31d4201841fbce" kindref="member">VkInit::commandBufferSubmitInfo</ref>(cmd);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>VkSemaphoreSubmitInfo<sp/>waitInfo<sp/>=<sp/><ref refid="a00102_1a255af650bfd089f6febd85848d58c6c5" kindref="member">VkInit::semaphoreSubmitInfo</ref>(VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT_KHR,<sp/><ref refid="a00217_1aa93d515ee250059976f8b84bd5599ac0" kindref="member">getCurrentFrame</ref>()._swapchainSemaphore);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>VkSemaphoreSubmitInfo<sp/>signalInfo<sp/>=<sp/><ref refid="a00102_1a255af650bfd089f6febd85848d58c6c5" kindref="member">VkInit::semaphoreSubmitInfo</ref>(VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT,<sp/><ref refid="a00217_1aa93d515ee250059976f8b84bd5599ac0" kindref="member">getCurrentFrame</ref>()._renderSemaphore);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>VkSubmitInfo2<sp/>submit<sp/>=<sp/><ref refid="a00102_1a2cef7fa07f55a58eb23a2aa4de6cb956" kindref="member">VkInit::submitInfo</ref>(&amp;cmdinfo,<sp/>&amp;signalInfo,<sp/>&amp;waitInfo);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//submit<sp/>command<sp/>buffer<sp/>to<sp/>the<sp/>queue<sp/>and<sp/>execute<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>_renderFence<sp/>will<sp/>now<sp/>block<sp/>until<sp/>the<sp/>graphic<sp/>commands<sp/>finish<sp/>execution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00074_1a3d55e176cc77828a9adaa05ac4413b99" kindref="member">VK_CHECK</ref>(vkQueueSubmit2(<ref refid="a00217_1a6b240d37948c2d5fa2cf071468c3bd4b" kindref="member">_graphicsQueue</ref>,<sp/>1,<sp/>&amp;submit,<sp/><ref refid="a00217_1aa93d515ee250059976f8b84bd5599ac0" kindref="member">getCurrentFrame</ref>()._renderFence));</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//prepare<sp/>present</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>will<sp/>put<sp/>the<sp/>image<sp/>we<sp/>just<sp/>rendered<sp/>to<sp/>into<sp/>the<sp/>visible<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>want<sp/>to<sp/>wait<sp/>on<sp/>the<sp/>_renderSemaphore<sp/>for<sp/>that,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>its<sp/>necessary<sp/>that<sp/>drawing<sp/>commands<sp/>have<sp/>finished<sp/>before<sp/>the<sp/>image<sp/>is<sp/>displayed<sp/>to<sp/>the<sp/>user</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>VkPresentInfoKHR<sp/><ref refid="a00102_1a89cdca6f147b3cacbef67ef0fcddb5a4" kindref="member">presentInfo</ref><sp/>=<sp/><ref refid="a00102_1a89cdca6f147b3cacbef67ef0fcddb5a4" kindref="member">VkInit::presentInfo</ref>();</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00102_1a89cdca6f147b3cacbef67ef0fcddb5a4" kindref="member">presentInfo</ref>.pSwapchains<sp/>=<sp/>&amp;<ref refid="a00217_1ac17fb4ee4cf0de62648debe8e4b05130" kindref="member">_swapchain</ref>;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00102_1a89cdca6f147b3cacbef67ef0fcddb5a4" kindref="member">presentInfo</ref>.swapchainCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00102_1a89cdca6f147b3cacbef67ef0fcddb5a4" kindref="member">presentInfo</ref>.pWaitSemaphores<sp/>=<sp/>&amp;<ref refid="a00217_1aa93d515ee250059976f8b84bd5599ac0" kindref="member">getCurrentFrame</ref>().<ref refid="a00181_1a383e503475e5ebda98abe12d2f31d9a3" kindref="member">_renderSemaphore</ref>;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00102_1a89cdca6f147b3cacbef67ef0fcddb5a4" kindref="member">presentInfo</ref>.waitSemaphoreCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00102_1a89cdca6f147b3cacbef67ef0fcddb5a4" kindref="member">presentInfo</ref>.pImageIndices<sp/>=<sp/>&amp;swapchainImageIndex;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>VkResult<sp/>presentResult<sp/>=<sp/>vkQueuePresentKHR(<ref refid="a00217_1a6b240d37948c2d5fa2cf071468c3bd4b" kindref="member">_graphicsQueue</ref>,<sp/>&amp;presentInfo);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//increase<sp/>the<sp/>number<sp/>of<sp/>frames<sp/>drawn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1acbacb0e89bba12ea169c900bbf74a23e" kindref="member">_frameNumber</ref>++;</highlight></codeline>
<codeline lineno="290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a00217_1ae2bc28152df989a30cfc8286ccf33b0d" kindref="member">VulkanEngine::Run</ref>()</highlight></codeline>
<codeline lineno="293"><highlight class="normal">{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Handle<sp/>events<sp/>on<sp/>queue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>start<sp/>=<sp/>std::chrono::system_clock::now();</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glfwGetWindowAttrib(<ref refid="a00217_1a66a9cc0c8097072f24c38e687bf4a51a" kindref="member">_window</ref>,<sp/>GLFW_ICONIFIED))<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00217_1a290bcf05482970acbfd14571034ccd90" kindref="member">_stopRendering</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!glfwGetWindowAttrib(<ref refid="a00217_1a66a9cc0c8097072f24c38e687bf4a51a" kindref="member">_window</ref>,<sp/>GLFW_ICONIFIED))<sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00217_1a290bcf05482970acbfd14571034ccd90" kindref="member">_stopRendering</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>not<sp/>draw<sp/>if<sp/>we<sp/>are<sp/>minimized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="a00217_1a290bcf05482970acbfd14571034ccd90" kindref="member">_stopRendering</ref>)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>throttle<sp/>the<sp/>speed<sp/>to<sp/>avoid<sp/>the<sp/>endless<sp/>spinning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::this_thread::sleep_for(std::chrono::milliseconds(100));</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(resizeRequested)<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resizeSwapchain();</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00217_1adaef1ea968c30d0cc429146dfbb99330" kindref="member">mainCamera</ref>.<ref refid="a00153_1a4387bf00e77f807c531be49e24dbd834" kindref="member">processEvent</ref>(<ref refid="a00217_1a66a9cc0c8097072f24c38e687bf4a51a" kindref="member">_window</ref>);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Imgui</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>end<sp/>=<sp/>std::chrono::system_clock::now();</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>elapsed<sp/>=<sp/>std::chrono::duration_cast&lt;std::chrono::microseconds&gt;(end<sp/>-<sp/>start);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00217_1ac5fb2b0b7dea59777e271cc2d5a834bf" kindref="member">stats</ref>.<ref refid="a00249_1a268de968f518937e5b5a0eabcde74ac1" kindref="member">frameTime</ref><sp/>=<sp/>elapsed.count()<sp/>/<sp/>1000.f;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a00217_1a0920f100af18abeffaff8ac5296ad309" kindref="member">VulkanEngine::start_imgui_frame</ref>()<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui_ImplVulkan_NewFrame();</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui_ImplGlfw_NewFrame();</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui::NewFrame();</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="a00217_1af958cc75522e578ad3b4837d362e42ee" kindref="member">displayDebugMenu</ref>)<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ImGui::Begin(</highlight><highlight class="stringliteral">&quot;Debug&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00189" kindref="compound">ComputeEffect</ref><sp/>&amp;selected<sp/>=<sp/>backgroundEffects[currentBackgroundEffect];</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ImGui::TreeNode(</highlight><highlight class="stringliteral">&quot;Background&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::Text(</highlight><highlight class="stringliteral">&quot;Selected<sp/>Effect:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>selected.<ref refid="a00189_1abddbf819b22623f6a100da0296f22c79" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::SliderInt(</highlight><highlight class="stringliteral">&quot;Effect<sp/>Index&quot;</highlight><highlight class="normal">,<sp/>&amp;currentBackgroundEffect,<sp/>0,<sp/>backgroundEffects.size()<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::InputFloat4(</highlight><highlight class="stringliteral">&quot;data1&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*)<sp/>&amp;selected.<ref refid="a00189_1a8f0ff7eafb00783dbcc2a31a344a424f" kindref="member">data</ref>.<ref refid="a00185_1af1b14859e4a196ab2313734dde81428a" kindref="member">data1</ref>);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::InputFloat4(</highlight><highlight class="stringliteral">&quot;data2&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*)<sp/>&amp;selected.<ref refid="a00189_1a8f0ff7eafb00783dbcc2a31a344a424f" kindref="member">data</ref>.<ref refid="a00185_1aaa6359f4ea37d85e40f2881ef732826b" kindref="member">data2</ref>);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::InputFloat4(</highlight><highlight class="stringliteral">&quot;data3&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*)<sp/>&amp;selected.<ref refid="a00189_1a8f0ff7eafb00783dbcc2a31a344a424f" kindref="member">data</ref>.<ref refid="a00185_1a5035e7701b815f7e95c3fd525b6e075e" kindref="member">data3</ref>);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::InputFloat4(</highlight><highlight class="stringliteral">&quot;data4&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*)<sp/>&amp;selected.<ref refid="a00189_1a8f0ff7eafb00783dbcc2a31a344a424f" kindref="member">data</ref>.<ref refid="a00185_1ad1b7e85d855000abe4f3c62ca6b9e85e" kindref="member">data4</ref>);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::TreePop();</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::Spacing();</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ImGui::TreeNode(</highlight><highlight class="stringliteral">&quot;Camera<sp/>Info&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::DragFloat3(</highlight><highlight class="stringliteral">&quot;Pos&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*)<sp/>&amp;<ref refid="a00217_1adaef1ea968c30d0cc429146dfbb99330" kindref="member">mainCamera</ref>.<ref refid="a00153_1a04b5db2c530d8630660e8cfb93a4b3b5" kindref="member">position</ref>);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::DragFloat3(</highlight><highlight class="stringliteral">&quot;Vel&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*)<sp/>&amp;<ref refid="a00217_1adaef1ea968c30d0cc429146dfbb99330" kindref="member">mainCamera</ref>.<ref refid="a00153_1a53f64d060f4d084da096f64c99a459cf" kindref="member">velocity</ref>);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::DragFloat(</highlight><highlight class="stringliteral">&quot;Pitch&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="a00217_1adaef1ea968c30d0cc429146dfbb99330" kindref="member">mainCamera</ref>.<ref refid="a00153_1ab56fcb39f580e8d2159cf2c9c6d9a65a" kindref="member">pitch</ref>,<sp/>0.01f);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::DragFloat(</highlight><highlight class="stringliteral">&quot;Yaw&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="a00217_1adaef1ea968c30d0cc429146dfbb99330" kindref="member">mainCamera</ref>.<ref refid="a00153_1ad76701b22630f2df28a0ae15f0497a3a" kindref="member">yaw</ref>,<sp/>0.01f);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::DragFloat(</highlight><highlight class="stringliteral">&quot;FOV&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="a00217_1adaef1ea968c30d0cc429146dfbb99330" kindref="member">mainCamera</ref>.<ref refid="a00153_1aff7393c9cfbccd7e369091f00008da93" kindref="member">fov</ref>);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::DragFloat(</highlight><highlight class="stringliteral">&quot;near&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="a00217_1adaef1ea968c30d0cc429146dfbb99330" kindref="member">mainCamera</ref>.<ref refid="a00153_1ad96efd3e1e4ec33dddb1d25f05d02ff2" kindref="member">near</ref>);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::DragFloat(</highlight><highlight class="stringliteral">&quot;far&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="a00217_1adaef1ea968c30d0cc429146dfbb99330" kindref="member">mainCamera</ref>.<ref refid="a00153_1a9f30b77edf6485e001a98d21ff5f17fe" kindref="member">far</ref>);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::TreePop();</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ImGui::TreeNode(</highlight><highlight class="stringliteral">&quot;Engine<sp/>Stats&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::Text(</highlight><highlight class="stringliteral">&quot;FrameTime<sp/><sp/>(ms):<sp/>%f&quot;</highlight><highlight class="normal">,<sp/><ref refid="a00217_1ac5fb2b0b7dea59777e271cc2d5a834bf" kindref="member">stats</ref>.<ref refid="a00249_1a268de968f518937e5b5a0eabcde74ac1" kindref="member">frameTime</ref>);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::Text(</highlight><highlight class="stringliteral">&quot;DrawTime<sp/><sp/><sp/>(ms):<sp/>%f&quot;</highlight><highlight class="normal">,<sp/><ref refid="a00217_1ac5fb2b0b7dea59777e271cc2d5a834bf" kindref="member">stats</ref>.<ref refid="a00249_1ab98fff18928718889d9a41f62cb45b5b" kindref="member">meshDrawTime</ref>);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::Text(</highlight><highlight class="stringliteral">&quot;UpdateTime<sp/>(ms):<sp/>%f&quot;</highlight><highlight class="normal">,<sp/><ref refid="a00217_1ac5fb2b0b7dea59777e271cc2d5a834bf" kindref="member">stats</ref>.<ref refid="a00249_1a63684651caeeea776748ffec6860e3d2" kindref="member">sceneUpdateTime</ref>);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::Text(</highlight><highlight class="stringliteral">&quot;DrawCount<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>%i&quot;</highlight><highlight class="normal">,<sp/><ref refid="a00217_1ac5fb2b0b7dea59777e271cc2d5a834bf" kindref="member">stats</ref>.<ref refid="a00249_1ad2e9038c2125482ce0c3e952ee4a1640" kindref="member">drawCallCount</ref>);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::Text(</highlight><highlight class="stringliteral">&quot;TriangleCount<sp/><sp/>:<sp/>%i&quot;</highlight><highlight class="normal">,<sp/><ref refid="a00217_1ac5fb2b0b7dea59777e271cc2d5a834bf" kindref="member">stats</ref>.<ref refid="a00249_1a09bb44af11d551238f5592baf3192ac0" kindref="member">triangleCount</ref>);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::TreePop();</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui::End();</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal">}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a00217_1a39cb52548f29a4501c5e17bb7eb8a001" kindref="member">VulkanEngine::end_imgui_frame</ref>()<sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui::Render();</highlight></codeline>
<codeline lineno="393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VulkanEngine::drawBackground(VkCommandBuffer<sp/>cmd)<sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00189" kindref="compound">ComputeEffect</ref>&amp;<sp/>effect<sp/>=<sp/>backgroundEffects[currentBackgroundEffect];</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bind<sp/>the<sp/>background<sp/>compute<sp/>pipeline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>vkCmdBindPipeline(cmd,<sp/>VK_PIPELINE_BIND_POINT_COMPUTE,<sp/>effect.<ref refid="a00189_1ae88c49abeaebead8e1886f771f49fdfe" kindref="member">pipeline</ref>);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bind<sp/>the<sp/>descriptor<sp/>set<sp/>containing<sp/>the<sp/>draw<sp/>image<sp/>for<sp/>the<sp/>compute<sp/>pipeline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>vkCmdBindDescriptorSets(cmd,<sp/>VK_PIPELINE_BIND_POINT_COMPUTE,<sp/><ref refid="a00217_1a0b8a40b8565cc5e4dce1477451ec9758" kindref="member">_gradientPipelineLayout</ref>,<sp/>0,<sp/>1,<sp/>&amp;<ref refid="a00217_1adcf4fd54a9568717d52fc711b1ff8593" kindref="member">_drawImageDescriptors</ref>,<sp/>0,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>vkCmdPushConstants(cmd,<sp/><ref refid="a00217_1a0b8a40b8565cc5e4dce1477451ec9758" kindref="member">_gradientPipelineLayout</ref>,<sp/>VK_SHADER_STAGE_COMPUTE_BIT,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="a00185" kindref="compound">ComputePushConstants</ref>),<sp/>&amp;effect.<ref refid="a00189_1a8f0ff7eafb00783dbcc2a31a344a424f" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>execute<sp/>the<sp/>compute<sp/>pipeline<sp/>dispatch.<sp/>We<sp/>are<sp/>using<sp/>16x16<sp/>workgroup<sp/>size<sp/>so<sp/>we<sp/>need<sp/>to<sp/>divide<sp/>by<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>vkCmdDispatch(cmd,<sp/>std::ceil(<ref refid="a00217_1acdf79fe860137de04a46809a804094e4" kindref="member">_drawExtent</ref>.width<sp/>/<sp/>16.0),<sp/>std::ceil(<ref refid="a00217_1acdf79fe860137de04a46809a804094e4" kindref="member">_drawExtent</ref>.height<sp/>/<sp/>16.0),<sp/>1);</highlight></codeline>
<codeline lineno="413"><highlight class="normal">}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VulkanEngine::initVulkan()<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>vkb::InstanceBuilder<sp/>builder;<sp/></highlight><highlight class="comment">//<sp/>bob<sp/>the<sp/>builder<sp/>:)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>inst_ret<sp/>=<sp/>builder.set_app_name(</highlight><highlight class="stringliteral">&quot;Atomus<sp/>Application&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.request_validation_layers(<ref refid="a00044_1a0f2bcd236403cd740db7ed89ec4e392f" kindref="member">bUseValidationLayers</ref>)</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.use_default_debug_messenger()</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.require_api_version(1,<sp/>3,<sp/>0)</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="a00157_1a797241e8070455929166f95a9de86163" kindref="member">build</ref>();<sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>replace<sp/>later<sp/>one<sp/>with<sp/>user<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>vkb::Instance<sp/>vkb_inst<sp/>=<sp/>inst_ret.value();</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>update<sp/>our<sp/>instance<sp/>:)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1a85897f1180282b72d30b55dda1fe1045" kindref="member">_instance</ref><sp/>=<sp/>vkb_inst.instance;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1aafc8bafd1ba65127ce2720de635e1231" kindref="member">_debugMessenger</ref><sp/>=<sp/>vkb_inst.debug_messenger;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(glfwCreateWindowSurface(<ref refid="a00217_1a85897f1180282b72d30b55dda1fe1045" kindref="member">_instance</ref>,<sp/><ref refid="a00217_1a66a9cc0c8097072f24c38e687bf4a51a" kindref="member">_window</ref>,<sp/>NULL,<sp/>&amp;<ref refid="a00217_1ac5f5f041d67a7983769cc80255bead65" kindref="member">_surface</ref>)<sp/>!=<sp/>VK_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::error(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>Create<sp/>window<sp/>Surface<sp/>!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>VkPhysicalDeviceVulkan13Features<sp/>features{};</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>features.dynamicRendering<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>features.synchronization2<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>VkPhysicalDeviceVulkan12Features<sp/>features12{};</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>features12.bufferDeviceAddress<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>features12.descriptorIndexing<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>select<sp/>a<sp/>GPU<sp/>that<sp/>can<sp/>write<sp/>to<sp/>glfw<sp/>and<sp/>supports<sp/>vulkan<sp/>1.3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>vkb::PhysicalDeviceSelector<sp/>selector{<sp/>vkb_inst};</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>vkb::PhysicalDevice<sp/>physicalDevice<sp/>=<sp/>selector</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.set_minimum_version(1,<sp/>3)</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.set_required_features_13(features)</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.set_required_features_12(features12)</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.set_surface(<ref refid="a00217_1ac5f5f041d67a7983769cc80255bead65" kindref="member">_surface</ref>)</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.select()</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value();</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Final<sp/>Vulkan<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>vkb::DeviceBuilder<sp/>deviceBuilder{<sp/>physicalDevice<sp/>};</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>vkb::Device<sp/>vkbDevice<sp/>=<sp/>deviceBuilder.build().value();</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref><sp/>=<sp/>vkbDevice.device;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1a5d533c792641fc73c7834c46074c25cd" kindref="member">_chosenGPU</ref><sp/>=<sp/>physicalDevice.physical_device;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>vkBootstrap<sp/>to<sp/>get<sp/>a<sp/>Graphics<sp/>queue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1a6b240d37948c2d5fa2cf071468c3bd4b" kindref="member">_graphicsQueue</ref><sp/>=<sp/>vkbDevice.get_queue(vkb::QueueType::graphics).value();</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1a3ce453b78ccf4ffdd19c2e64fb5a6ac7" kindref="member">_graphicsQueueFamily</ref><sp/>=<sp/>vkbDevice.get_queue_index(vkb::QueueType::graphics).value();</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>memory<sp/>allocator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>VmaAllocatorCreateInfo<sp/>allocatorInfo<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>allocatorInfo.physicalDevice<sp/>=<sp/><ref refid="a00217_1a5d533c792641fc73c7834c46074c25cd" kindref="member">_chosenGPU</ref>;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>allocatorInfo.device<sp/>=<sp/><ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>allocatorInfo.instance<sp/>=<sp/><ref refid="a00217_1a85897f1180282b72d30b55dda1fe1045" kindref="member">_instance</ref>;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>allocatorInfo.flags<sp/>=<sp/>VMA_ALLOCATOR_CREATE_BUFFER_DEVICE_ADDRESS_BIT;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>vmaCreateAllocator(&amp;allocatorInfo,<sp/>&amp;<ref refid="a00217_1a75d08cfc1400cc46c7649b0041b0e0fc" kindref="member">_allocator</ref>);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1ab1707a6b3122db0d0fce56c13999367b" kindref="member">_mainDeletionQueue</ref>.<ref refid="a00285_1a91bdce3808d2f96671f38a610810c67b" kindref="member">pushFunction</ref>([&amp;]()<sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vmaDestroyAllocator(<ref refid="a00217_1a75d08cfc1400cc46c7649b0041b0e0fc" kindref="member">_allocator</ref>);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal">}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VulkanEngine::initSwapchain()<sp/>{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>createSwapchain(<ref refid="a00217_1a1b355560c30d73de48d86023dcdea5f4" kindref="member">_windowExtent</ref>.width,<sp/><ref refid="a00217_1a1b355560c30d73de48d86023dcdea5f4" kindref="member">_windowExtent</ref>.height);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>image<sp/>size<sp/>will<sp/>match<sp/>the<sp/>window<sp/>:)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>VkExtent3D<sp/>drawImageExtent<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00217_1a1b355560c30d73de48d86023dcdea5f4" kindref="member">_windowExtent</ref>.width,</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00217_1a1b355560c30d73de48d86023dcdea5f4" kindref="member">_windowExtent</ref>.height,</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>format<sp/>is<sp/>hardcoded<sp/>to<sp/>32<sp/>bit<sp/>float</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1ad332e0c9421b787d1805a642c6a04c70" kindref="member">_drawImage</ref>.<ref refid="a00289_1ae4ccf662c664f3b9bdafa7459b746d8b" kindref="member">imageFormat</ref><sp/>=<sp/>VK_FORMAT_R16G16B16A16_SFLOAT;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1ad332e0c9421b787d1805a642c6a04c70" kindref="member">_drawImage</ref>.<ref refid="a00289_1a3c0016e1c5c44bb21f336486da7c9d66" kindref="member">imageExtent</ref><sp/>=<sp/>drawImageExtent;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>VkImageUsageFlags<sp/><sp/>drawImageUsages{};</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>drawImageUsages<sp/>|=<sp/>VK_IMAGE_USAGE_TRANSFER_SRC_BIT;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>drawImageUsages<sp/>|=<sp/>VK_IMAGE_USAGE_TRANSFER_DST_BIT;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>drawImageUsages<sp/>|=<sp/>VK_IMAGE_USAGE_STORAGE_BIT;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>drawImageUsages<sp/>|=<sp/>VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>VkImageCreateInfo<sp/>rimgInfo<sp/>=<sp/><ref refid="a00102_1af6244bbb89d93fabe28d83cb4203da94" kindref="member">VkInit::imageCreateInfo</ref>(<ref refid="a00217_1ad332e0c9421b787d1805a642c6a04c70" kindref="member">_drawImage</ref>.<ref refid="a00289_1ae4ccf662c664f3b9bdafa7459b746d8b" kindref="member">imageFormat</ref>,<sp/>drawImageUsages,<sp/>drawImageExtent);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>VmaAllocationCreateInfo<sp/>rimgAllocInfo<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>rimgAllocInfo.usage<sp/>=<sp/>VMA_MEMORY_USAGE_GPU_ONLY;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>rimgAllocInfo.requiredFlags<sp/>=<sp/>VkMemoryPropertyFlags(VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>vmaCreateImage(<ref refid="a00217_1a75d08cfc1400cc46c7649b0041b0e0fc" kindref="member">_allocator</ref>,<sp/>&amp;rimgInfo,<sp/>&amp;rimgAllocInfo,<sp/>&amp;<ref refid="a00217_1ad332e0c9421b787d1805a642c6a04c70" kindref="member">_drawImage</ref>.<ref refid="a00289_1a13e4a58bd70b09a3743df9effc0dc9f6" kindref="member">image</ref>,<sp/>&amp;<ref refid="a00217_1ad332e0c9421b787d1805a642c6a04c70" kindref="member">_drawImage</ref>.<ref refid="a00289_1a6374bbe549aabc16f21c58b717329028" kindref="member">allocation</ref>,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>VkImageViewCreateInfo<sp/>rviewInfo<sp/>=<sp/><ref refid="a00102_1a57731c73c6a5a9b41a591f594bedd96c" kindref="member">VkInit::imageViewCreateInfo</ref>(<ref refid="a00217_1ad332e0c9421b787d1805a642c6a04c70" kindref="member">_drawImage</ref>.<ref refid="a00289_1ae4ccf662c664f3b9bdafa7459b746d8b" kindref="member">imageFormat</ref>,<sp/><ref refid="a00217_1ad332e0c9421b787d1805a642c6a04c70" kindref="member">_drawImage</ref>.<ref refid="a00289_1a13e4a58bd70b09a3743df9effc0dc9f6" kindref="member">image</ref>,<sp/>VK_IMAGE_ASPECT_COLOR_BIT);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00074_1a3d55e176cc77828a9adaa05ac4413b99" kindref="member">VK_CHECK</ref>(vkCreateImageView(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/>&amp;rviewInfo,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;<ref refid="a00217_1ad332e0c9421b787d1805a642c6a04c70" kindref="member">_drawImage</ref>.<ref refid="a00289_1ad124234921b26ec7e9b0cc5f603d5726" kindref="member">imageView</ref>));</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>lets<sp/>do<sp/>DEPTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1a20eff0d0f15bd84d364edb01d8cb340d" kindref="member">_depthImage</ref>.<ref refid="a00289_1ae4ccf662c664f3b9bdafa7459b746d8b" kindref="member">imageFormat</ref><sp/>=<sp/>VK_FORMAT_D32_SFLOAT;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1a20eff0d0f15bd84d364edb01d8cb340d" kindref="member">_depthImage</ref>.<ref refid="a00289_1a3c0016e1c5c44bb21f336486da7c9d66" kindref="member">imageExtent</ref><sp/>=<sp/>drawImageExtent;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>VkImageUsageFlags<sp/><sp/>depthImageUsages{};</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>depthImageUsages<sp/>|=<sp/>VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>VkImageCreateInfo<sp/>dimgInfo<sp/>=<sp/><ref refid="a00102_1af6244bbb89d93fabe28d83cb4203da94" kindref="member">VkInit::imageCreateInfo</ref>(<ref refid="a00217_1a20eff0d0f15bd84d364edb01d8cb340d" kindref="member">_depthImage</ref>.<ref refid="a00289_1ae4ccf662c664f3b9bdafa7459b746d8b" kindref="member">imageFormat</ref>,<sp/>depthImageUsages,<sp/>drawImageExtent);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//allocate<sp/>and<sp/>create<sp/>the<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>vmaCreateImage(<ref refid="a00217_1a75d08cfc1400cc46c7649b0041b0e0fc" kindref="member">_allocator</ref>,<sp/>&amp;dimgInfo,<sp/>&amp;rimgAllocInfo,<sp/>&amp;<ref refid="a00217_1a20eff0d0f15bd84d364edb01d8cb340d" kindref="member">_depthImage</ref>.<ref refid="a00289_1a13e4a58bd70b09a3743df9effc0dc9f6" kindref="member">image</ref>,<sp/>&amp;<ref refid="a00217_1a20eff0d0f15bd84d364edb01d8cb340d" kindref="member">_depthImage</ref>.<ref refid="a00289_1a6374bbe549aabc16f21c58b717329028" kindref="member">allocation</ref>,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//build<sp/>image<sp/>view</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>VkImageViewCreateInfo<sp/>dViewInfo<sp/>=<sp/><ref refid="a00102_1a57731c73c6a5a9b41a591f594bedd96c" kindref="member">VkInit::imageViewCreateInfo</ref>(<ref refid="a00217_1a20eff0d0f15bd84d364edb01d8cb340d" kindref="member">_depthImage</ref>.<ref refid="a00289_1ae4ccf662c664f3b9bdafa7459b746d8b" kindref="member">imageFormat</ref>,<sp/><ref refid="a00217_1a20eff0d0f15bd84d364edb01d8cb340d" kindref="member">_depthImage</ref>.<ref refid="a00289_1a13e4a58bd70b09a3743df9effc0dc9f6" kindref="member">image</ref>,<sp/>VK_IMAGE_ASPECT_DEPTH_BIT);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00074_1a3d55e176cc77828a9adaa05ac4413b99" kindref="member">VK_CHECK</ref>(vkCreateImageView(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/>&amp;dViewInfo,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;<ref refid="a00217_1a20eff0d0f15bd84d364edb01d8cb340d" kindref="member">_depthImage</ref>.<ref refid="a00289_1ad124234921b26ec7e9b0cc5f603d5726" kindref="member">imageView</ref>));</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1ab1707a6b3122db0d0fce56c13999367b" kindref="member">_mainDeletionQueue</ref>.<ref refid="a00285_1a91bdce3808d2f96671f38a610810c67b" kindref="member">pushFunction</ref>([=]()<sp/>{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkDestroyImageView(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/><ref refid="a00217_1ad332e0c9421b787d1805a642c6a04c70" kindref="member">_drawImage</ref>.<ref refid="a00289_1ad124234921b26ec7e9b0cc5f603d5726" kindref="member">imageView</ref>,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vmaDestroyImage(<ref refid="a00217_1a75d08cfc1400cc46c7649b0041b0e0fc" kindref="member">_allocator</ref>,<sp/><ref refid="a00217_1ad332e0c9421b787d1805a642c6a04c70" kindref="member">_drawImage</ref>.<ref refid="a00289_1a13e4a58bd70b09a3743df9effc0dc9f6" kindref="member">image</ref>,<sp/><ref refid="a00217_1ad332e0c9421b787d1805a642c6a04c70" kindref="member">_drawImage</ref>.<ref refid="a00289_1a6374bbe549aabc16f21c58b717329028" kindref="member">allocation</ref>);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkDestroyImageView(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/><ref refid="a00217_1a20eff0d0f15bd84d364edb01d8cb340d" kindref="member">_depthImage</ref>.<ref refid="a00289_1ad124234921b26ec7e9b0cc5f603d5726" kindref="member">imageView</ref>,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vmaDestroyImage(<ref refid="a00217_1a75d08cfc1400cc46c7649b0041b0e0fc" kindref="member">_allocator</ref>,<sp/><ref refid="a00217_1a20eff0d0f15bd84d364edb01d8cb340d" kindref="member">_depthImage</ref>.<ref refid="a00289_1a13e4a58bd70b09a3743df9effc0dc9f6" kindref="member">image</ref>,<sp/><ref refid="a00217_1a20eff0d0f15bd84d364edb01d8cb340d" kindref="member">_depthImage</ref>.<ref refid="a00289_1a6374bbe549aabc16f21c58b717329028" kindref="member">allocation</ref>);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal">}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VulkanEngine::initCommands()<sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>a<sp/>command<sp/>pool<sp/>for<sp/>commands<sp/>sumbitted<sp/>by<sp/>the<sp/>graphics<sp/>queue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>VkCommandPoolCreateInfo<sp/>commandPoolInfo<sp/>=<sp/><ref refid="a00102_1a3cdef4e7c3a16175ef52084187f27428" kindref="member">VkInit::commandPoolCreateInfo</ref>(<ref refid="a00217_1a3ce453b78ccf4ffdd19c2e64fb5a6ac7" kindref="member">_graphicsQueueFamily</ref>,<sp/>VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/><ref refid="a00047_1a10ae962afdbd2c033a5c3af07aea14c2" kindref="member">FRAME_OVERLAP</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00074_1a3d55e176cc77828a9adaa05ac4413b99" kindref="member">VK_CHECK</ref>(vkCreateCommandPool(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/>&amp;commandPoolInfo,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;<ref refid="a00217_1a43719b6bfc0dfb7b725e254b46716815" kindref="member">_frames</ref>[i]._commandPool));</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>the<sp/>default<sp/>command<sp/>buffer<sp/>for<sp/>rendering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkCommandBufferAllocateInfo<sp/>cmdAllocInfo<sp/>=<sp/><ref refid="a00102_1a8fe7cf8c5c6f45b1cbec1c04a3fb2801" kindref="member">VkInit::commandBufferAllocateInfo</ref>(<ref refid="a00217_1a43719b6bfc0dfb7b725e254b46716815" kindref="member">_frames</ref>[i]._commandPool,<sp/>1);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00074_1a3d55e176cc77828a9adaa05ac4413b99" kindref="member">VK_CHECK</ref>(vkAllocateCommandBuffers(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/>&amp;cmdAllocInfo,<sp/>&amp;<ref refid="a00217_1a43719b6bfc0dfb7b725e254b46716815" kindref="member">_frames</ref>[i]._mainCommandBuffer));</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00074_1a3d55e176cc77828a9adaa05ac4413b99" kindref="member">VK_CHECK</ref>(vkCreateCommandPool(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/>&amp;commandPoolInfo,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;<ref refid="a00217_1a3bb1ce4d610c0318e013638c807bd920" kindref="member">_immCommandPool</ref>));</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//alloc<sp/>the<sp/>cmd<sp/>buf<sp/>for<sp/>immediate<sp/>submits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>VkCommandBufferAllocateInfo<sp/>cmdAllocInfo<sp/>=<sp/><ref refid="a00102_1a8fe7cf8c5c6f45b1cbec1c04a3fb2801" kindref="member">VkInit::commandBufferAllocateInfo</ref>(<ref refid="a00217_1a3bb1ce4d610c0318e013638c807bd920" kindref="member">_immCommandPool</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00074_1a3d55e176cc77828a9adaa05ac4413b99" kindref="member">VK_CHECK</ref>(vkAllocateCommandBuffers(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/>&amp;cmdAllocInfo,<sp/>&amp;<ref refid="a00217_1ad2f38e852d4cb1820da1b9d60ab38568" kindref="member">_immCommandBuffer</ref>));</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1ab1707a6b3122db0d0fce56c13999367b" kindref="member">_mainDeletionQueue</ref>.<ref refid="a00285_1a91bdce3808d2f96671f38a610810c67b" kindref="member">pushFunction</ref>([=]()<sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkDestroyCommandPool(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/><ref refid="a00217_1a3bb1ce4d610c0318e013638c807bd920" kindref="member">_immCommandPool</ref>,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal">}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VulkanEngine::initSyncStructures()<sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>fence<sp/>to<sp/>control<sp/>when<sp/>the<sp/>gpu<sp/>finishes<sp/>rendering<sp/>the<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>2<sp/>semaphores<sp/>to<sp/>sync<sp/>rendering<sp/>with<sp/>me<sp/>swapchain<sp/>:-)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>VkFenceCreateInfo<sp/><ref refid="a00102_1a58ec443d7114304aafcc6dfe40aa91cf" kindref="member">fenceCreateInfo</ref><sp/>=<sp/><ref refid="a00102_1a58ec443d7114304aafcc6dfe40aa91cf" kindref="member">VkInit::fenceCreateInfo</ref>(VK_FENCE_CREATE_SIGNALED_BIT);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>VkSemaphoreCreateInfo<sp/><ref refid="a00102_1ad350c43673bc9b3f7994cd67053d601a" kindref="member">semaphoreCreateInfo</ref><sp/>=<sp/><ref refid="a00102_1ad350c43673bc9b3f7994cd67053d601a" kindref="member">VkInit::semaphoreCreateInfo</ref>();</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<ref refid="a00047_1a10ae962afdbd2c033a5c3af07aea14c2" kindref="member">FRAME_OVERLAP</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00074_1a3d55e176cc77828a9adaa05ac4413b99" kindref="member">VK_CHECK</ref>(vkCreateFence(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/>&amp;fenceCreateInfo,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;<ref refid="a00217_1a43719b6bfc0dfb7b725e254b46716815" kindref="member">_frames</ref>[i]._renderFence));</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00074_1a3d55e176cc77828a9adaa05ac4413b99" kindref="member">VK_CHECK</ref>(vkCreateSemaphore(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/>&amp;semaphoreCreateInfo,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;<ref refid="a00217_1a43719b6bfc0dfb7b725e254b46716815" kindref="member">_frames</ref>[i]._swapchainSemaphore));</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00074_1a3d55e176cc77828a9adaa05ac4413b99" kindref="member">VK_CHECK</ref>(vkCreateSemaphore(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/>&amp;semaphoreCreateInfo,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;<ref refid="a00217_1a43719b6bfc0dfb7b725e254b46716815" kindref="member">_frames</ref>[i]._renderSemaphore));</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00074_1a3d55e176cc77828a9adaa05ac4413b99" kindref="member">VK_CHECK</ref>(vkCreateFence(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/>&amp;fenceCreateInfo,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;<ref refid="a00217_1ac238e3c8dd8ceef2593828c25f9c6532" kindref="member">_immFence</ref>));</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1ab1707a6b3122db0d0fce56c13999367b" kindref="member">_mainDeletionQueue</ref>.<ref refid="a00285_1a91bdce3808d2f96671f38a610810c67b" kindref="member">pushFunction</ref>([=]()<sp/>{<sp/>vkDestroyFence(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/><ref refid="a00217_1ac238e3c8dd8ceef2593828c25f9c6532" kindref="member">_immFence</ref>,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);<sp/>});</highlight></codeline>
<codeline lineno="597"><highlight class="normal">}</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VulkanEngine::createSwapchain(uint32_t<sp/>width,<sp/>uint32_t<sp/>height)<sp/>{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>vkb::SwapchainBuilder<sp/>swapchainBuilder{<sp/><ref refid="a00217_1a5d533c792641fc73c7834c46074c25cd" kindref="member">_chosenGPU</ref>,<sp/><ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/><ref refid="a00217_1ac5f5f041d67a7983769cc80255bead65" kindref="member">_surface</ref><sp/>};</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1a5e5a8b61e55df8eeffd820988e40e73e" kindref="member">_swapchainImageFormat</ref><sp/>=<sp/>VK_FORMAT_B8G8R8A8_UNORM;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>vkb::Swapchain<sp/>vkbSwapchain<sp/>=<sp/>swapchainBuilder</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.set_desired_format(VkSurfaceFormatKHR{<sp/><ref refid="a00217_1a5e5a8b61e55df8eeffd820988e40e73e" kindref="member">_swapchainImageFormat</ref>,<sp/>VK_COLOR_SPACE_SRGB_NONLINEAR_KHR<sp/>})</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.set_desired_present_mode(VK_PRESENT_MODE_FIFO_KHR)</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.set_desired_extent(width,<sp/>height)</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.add_image_usage_flags(VK_IMAGE_USAGE_TRANSFER_DST_BIT)</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.build()</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value();</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1ae2b5b9f37a4dd77e909d6a87c3290885" kindref="member">_swapchainExtent</ref><sp/>=<sp/>vkbSwapchain.extent;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1acdf79fe860137de04a46809a804094e4" kindref="member">_drawExtent</ref>.width<sp/>=<sp/><ref refid="a00217_1ae2b5b9f37a4dd77e909d6a87c3290885" kindref="member">_swapchainExtent</ref>.width;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1acdf79fe860137de04a46809a804094e4" kindref="member">_drawExtent</ref>.height<sp/>=<sp/><ref refid="a00217_1ae2b5b9f37a4dd77e909d6a87c3290885" kindref="member">_swapchainExtent</ref>.height;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>swapchain<sp/>and<sp/>it&apos;s<sp/>related<sp/>images</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1ac17fb4ee4cf0de62648debe8e4b05130" kindref="member">_swapchain</ref><sp/>=<sp/>vkbSwapchain.swapchain;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1a4f951e6fd307b7d08b28ef643be7e4fb" kindref="member">_swapchainImages</ref><sp/>=<sp/>vkbSwapchain.get_images().value();</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1a80ebb2acd6e6e88efaf9c7245c59079c" kindref="member">_swapchainImageViews</ref><sp/>=<sp/>vkbSwapchain.get_image_views().value();</highlight></codeline>
<codeline lineno="620"><highlight class="normal">}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VulkanEngine::destroySwapchain()<sp/>{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>vkDestroySwapchainKHR(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/><ref refid="a00217_1ac17fb4ee4cf0de62648debe8e4b05130" kindref="member">_swapchain</ref>,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>_swapchainImageView<sp/>:<sp/><ref refid="a00217_1a80ebb2acd6e6e88efaf9c7245c59079c" kindref="member">_swapchainImageViews</ref>)<sp/>{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkDestroyImageView(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/>_swapchainImageView,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="628"><highlight class="normal">}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VulkanEngine::initPipelines()<sp/>{</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>initBackgroundPipelines();</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//initTrianglePipeline();</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1a94db50b96840113529b5c31ee1eff0f3" kindref="member">metalRoughMaterial</ref>.<ref refid="a00193_1ac6b86602d156a5555b3799b9172c674e" kindref="member">buildPipelines</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="636"><highlight class="normal">}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VulkanEngine::initBackgroundPipelines()<sp/>{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>VkPipelineLayoutCreateInfo<sp/>computeLayout{};</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>computeLayout.sType<sp/>=<sp/>VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>computeLayout.pNext<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>computeLayout.pSetLayouts<sp/>=<sp/>&amp;<ref refid="a00217_1a510b5529eca5876823392263a245f45e" kindref="member">_drawImageDescriptorLayout</ref>;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>computeLayout.setLayoutCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>VkPushConstantRange<sp/>pushConstant{};</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/>pushConstant.offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>pushConstant.size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="a00185" kindref="compound">ComputePushConstants</ref>);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>pushConstant.stageFlags<sp/>=<sp/>VK_SHADER_STAGE_COMPUTE_BIT;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>computeLayout.pPushConstantRanges<sp/>=<sp/>&amp;pushConstant;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>computeLayout.pushConstantRangeCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00074_1a3d55e176cc77828a9adaa05ac4413b99" kindref="member">VK_CHECK</ref>(vkCreatePipelineLayout(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/>&amp;computeLayout,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;<ref refid="a00217_1a0b8a40b8565cc5e4dce1477451ec9758" kindref="member">_gradientPipelineLayout</ref>));</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//layout<sp/>Code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>VkShaderModule<sp/>gradientShader;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="a00101_1a73da1142a76da292c64a9499aacf5bc2" kindref="member">VkUtil::loadShaderModule</ref>(</highlight><highlight class="stringliteral">&quot;gradient.comp.spv&quot;</highlight><highlight class="normal">,<sp/><ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/>&amp;gradientShader))<sp/>{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::error(</highlight><highlight class="stringliteral">&quot;[ENGINE]<sp/>Error<sp/>with<sp/>Loading<sp/>shader&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>VkShaderModule<sp/>skyShader;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="a00101_1a73da1142a76da292c64a9499aacf5bc2" kindref="member">VkUtil::loadShaderModule</ref>(</highlight><highlight class="stringliteral">&quot;sky.comp.spv&quot;</highlight><highlight class="normal">,<sp/><ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/>&amp;skyShader))<sp/>{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::error(</highlight><highlight class="stringliteral">&quot;[ENGINE]<sp/>Error<sp/>with<sp/>loading<sp/>Sky<sp/>shader!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>VkPipelineShaderStageCreateInfo<sp/>stageinfo{};</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>stageinfo.sType<sp/>=<sp/>VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>stageinfo.pNext<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>stageinfo.stage<sp/>=<sp/>VK_SHADER_STAGE_COMPUTE_BIT;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>stageinfo.module<sp/>=<sp/>gradientShader;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>stageinfo.pName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;main&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>VkComputePipelineCreateInfo<sp/>computePipelineCreateInfo{};</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>computePipelineCreateInfo.sType<sp/>=<sp/>VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>computePipelineCreateInfo.pNext<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>computePipelineCreateInfo.layout<sp/>=<sp/><ref refid="a00217_1a0b8a40b8565cc5e4dce1477451ec9758" kindref="member">_gradientPipelineLayout</ref>;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>computePipelineCreateInfo.stage<sp/>=<sp/>stageinfo;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00189" kindref="compound">ComputeEffect</ref><sp/>gradient{};</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>gradient.<ref refid="a00189_1a03d2cd14a02f2d2e86ec6618299eab78" kindref="member">layout</ref><sp/>=<sp/><ref refid="a00217_1a0b8a40b8565cc5e4dce1477451ec9758" kindref="member">_gradientPipelineLayout</ref>;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>gradient.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;gradient&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>gradient.data<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight><highlight class="comment">//default<sp/>colors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>gradient.data.data1<sp/>=<sp/>glm::vec4(1,<sp/>0,<sp/>0,<sp/>1);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>gradient.data.data2<sp/>=<sp/>glm::vec4(0,<sp/>0,<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00074_1a3d55e176cc77828a9adaa05ac4413b99" kindref="member">VK_CHECK</ref>(vkCreateComputePipelines(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/>VK_NULL_HANDLE,<sp/>1,<sp/>&amp;computePipelineCreateInfo,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;gradient.pipeline));</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight><highlight class="comment">//change<sp/>the<sp/>shader<sp/>module<sp/>only<sp/>to<sp/>create<sp/>the<sp/>sky<sp/>shader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>computePipelineCreateInfo.stage.module<sp/>=<sp/>skyShader;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00189" kindref="compound">ComputeEffect</ref><sp/>sky{};</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>sky.<ref refid="a00189_1a03d2cd14a02f2d2e86ec6618299eab78" kindref="member">layout</ref><sp/>=<sp/><ref refid="a00217_1a0b8a40b8565cc5e4dce1477451ec9758" kindref="member">_gradientPipelineLayout</ref>;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>sky.name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;sky&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>sky.data<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>sky.data.data1<sp/>=<sp/>glm::vec4(0.1,<sp/>0.2,<sp/>0.4<sp/>,0.97);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00074_1a3d55e176cc77828a9adaa05ac4413b99" kindref="member">VK_CHECK</ref>(vkCreateComputePipelines(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/>VK_NULL_HANDLE,<sp/>1,<sp/>&amp;computePipelineCreateInfo,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;sky.pipeline));</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight><highlight class="comment">//add<sp/>the<sp/>2<sp/>background<sp/>effects<sp/>into<sp/>the<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>backgroundEffects.push_back(gradient);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>backgroundEffects.push_back(sky);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight><highlight class="comment">//destroy<sp/>structures<sp/>properly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>vkDestroyShaderModule(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/>gradientShader,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/>vkDestroyShaderModule(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/>skyShader,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1ab1707a6b3122db0d0fce56c13999367b" kindref="member">_mainDeletionQueue</ref>.<ref refid="a00285_1a91bdce3808d2f96671f38a610810c67b" kindref="member">pushFunction</ref>([&amp;]()<sp/>{</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkDestroyPipelineLayout(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/><ref refid="a00217_1a0b8a40b8565cc5e4dce1477451ec9758" kindref="member">_gradientPipelineLayout</ref>,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>effects<sp/>:<sp/>backgroundEffects)<sp/>{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkDestroyPipeline(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/>effects.pipeline,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal">}</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a00217_1add07ae792339ef143c88dd43f0950f1d" kindref="member">VulkanEngine::immediate_submit</ref>(std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(VkCommandBuffer<sp/>cmd)&gt;&amp;&amp;<sp/>function)<sp/>{</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00074_1a3d55e176cc77828a9adaa05ac4413b99" kindref="member">VK_CHECK</ref>(vkResetFences(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/>1,<sp/>&amp;<ref refid="a00217_1ac238e3c8dd8ceef2593828c25f9c6532" kindref="member">_immFence</ref>));</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00074_1a3d55e176cc77828a9adaa05ac4413b99" kindref="member">VK_CHECK</ref>(vkResetCommandBuffer(<ref refid="a00217_1ad2f38e852d4cb1820da1b9d60ab38568" kindref="member">_immCommandBuffer</ref>,<sp/>0));</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>VkCommandBuffer<sp/>cmd<sp/>=<sp/><ref refid="a00217_1ad2f38e852d4cb1820da1b9d60ab38568" kindref="member">_immCommandBuffer</ref>;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>VkCommandBufferBeginInfo<sp/>cmdBeginInfo<sp/>=<sp/><ref refid="a00102_1a4f27583522b48fbb2794b4f6eff37c5b" kindref="member">VkInit::commandBufferBeginInfo</ref>(VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00074_1a3d55e176cc77828a9adaa05ac4413b99" kindref="member">VK_CHECK</ref>(vkBeginCommandBuffer(cmd,<sp/>&amp;cmdBeginInfo));</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>function(cmd);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00074_1a3d55e176cc77828a9adaa05ac4413b99" kindref="member">VK_CHECK</ref>(vkEndCommandBuffer(cmd));</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/>VkCommandBufferSubmitInfo<sp/>cmdInfo<sp/>=<sp/><ref refid="a00102_1a4e3740324c0b56d48e31d4201841fbce" kindref="member">VkInit::commandBufferSubmitInfo</ref>(cmd);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>VkSubmitInfo2<sp/>submit<sp/>=<sp/><ref refid="a00102_1a2cef7fa07f55a58eb23a2aa4de6cb956" kindref="member">VkInit::submitInfo</ref>(&amp;cmdInfo,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>submit<sp/>cmd<sp/>buf<sp/>to<sp/>the<sp/>queue<sp/>and<sp/>execute<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>_renderFence<sp/>will<sp/>now<sp/>block<sp/>until<sp/>the<sp/>commands<sp/>finish.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00074_1a3d55e176cc77828a9adaa05ac4413b99" kindref="member">VK_CHECK</ref>(vkQueueSubmit2(<ref refid="a00217_1a6b240d37948c2d5fa2cf071468c3bd4b" kindref="member">_graphicsQueue</ref>,<sp/>1,<sp/>&amp;submit,<sp/><ref refid="a00217_1ac238e3c8dd8ceef2593828c25f9c6532" kindref="member">_immFence</ref>));</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00074_1a3d55e176cc77828a9adaa05ac4413b99" kindref="member">VK_CHECK</ref>(vkWaitForFences(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/>1,<sp/>&amp;<ref refid="a00217_1ac238e3c8dd8ceef2593828c25f9c6532" kindref="member">_immFence</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>9999999999));</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal">}</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VulkanEngine::initImGui()<sp/>{</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>descriptor<sp/>pool<sp/>for<sp/>imgui</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE<sp/>the<sp/>pool<sp/>is<sp/>very<sp/>oversize,<sp/>but<sp/>its<sp/>copied<sp/>from<sp/>the<sp/>imgui<sp/>demo.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>VkDescriptorPoolSize<sp/>pool_sizes[]<sp/>=<sp/>{<sp/>{<sp/>VK_DESCRIPTOR_TYPE_SAMPLER,<sp/>1000<sp/>},</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER,<sp/>1000<sp/>},</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE,<sp/>1000<sp/>},</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>VK_DESCRIPTOR_TYPE_STORAGE_IMAGE,<sp/>1000<sp/>},</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER,<sp/>1000<sp/>},</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER,<sp/>1000<sp/>},</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER,<sp/>1000<sp/>},</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>VK_DESCRIPTOR_TYPE_STORAGE_BUFFER,<sp/>1000<sp/>},</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC,<sp/>1000<sp/>},</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC,<sp/>1000<sp/>},</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT,<sp/>1000<sp/>}<sp/>};</highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/>VkDescriptorPoolCreateInfo<sp/>poolInfo<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/>poolInfo.sType<sp/>=<sp/>VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>poolInfo.flags<sp/>=<sp/>VK_DESCRIPTOR_POOL_CREATE_FREE_DESCRIPTOR_SET_BIT;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>poolInfo.maxSets<sp/>=<sp/>1000;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>poolInfo.poolSizeCount<sp/>=<sp/>(uint32_t)std::size(pool_sizes);</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>poolInfo.pPoolSizes<sp/>=<sp/>pool_sizes;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>VkDescriptorPool<sp/>imguiPool;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00074_1a3d55e176cc77828a9adaa05ac4413b99" kindref="member">VK_CHECK</ref>(vkCreateDescriptorPool(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/>&amp;poolInfo,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;imguiPool));</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>Imgui.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui::CreateContext();</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui_ImplGlfw_InitForVulkan(<ref refid="a00217_1a66a9cc0c8097072f24c38e687bf4a51a" kindref="member">_window</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui_ImplVulkan_InitInfo<sp/>init_info<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/>init_info.Instance<sp/>=<sp/><ref refid="a00217_1a85897f1180282b72d30b55dda1fe1045" kindref="member">_instance</ref>;</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/>init_info.PhysicalDevice<sp/>=<sp/><ref refid="a00217_1a5d533c792641fc73c7834c46074c25cd" kindref="member">_chosenGPU</ref>;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/>init_info.Device<sp/>=<sp/><ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/>init_info.Queue<sp/>=<sp/><ref refid="a00217_1a6b240d37948c2d5fa2cf071468c3bd4b" kindref="member">_graphicsQueue</ref>;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>init_info.DescriptorPool<sp/>=<sp/>imguiPool;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/>init_info.MinImageCount<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>init_info.ImageCount<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>init_info.UseDynamicRendering<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//dynamic<sp/>rendering<sp/>parameters<sp/>for<sp/>imgui<sp/>to<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/>init_info.PipelineRenderingCreateInfo<sp/>=<sp/>{.sType<sp/>=<sp/>VK_STRUCTURE_TYPE_PIPELINE_RENDERING_CREATE_INFO};</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>init_info.PipelineRenderingCreateInfo.colorAttachmentCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>init_info.PipelineRenderingCreateInfo.pColorAttachmentFormats<sp/>=<sp/>&amp;<ref refid="a00217_1a5e5a8b61e55df8eeffd820988e40e73e" kindref="member">_swapchainImageFormat</ref>;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>init_info.MSAASamples<sp/>=<sp/>VK_SAMPLE_COUNT_1_BIT;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui_ImplVulkan_Init(&amp;init_info);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui_ImplVulkan_CreateFontsTexture();</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>the<sp/>destroy<sp/>the<sp/>imgui<sp/>created<sp/>structures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1ab1707a6b3122db0d0fce56c13999367b" kindref="member">_mainDeletionQueue</ref>.<ref refid="a00285_1a91bdce3808d2f96671f38a610810c67b" kindref="member">pushFunction</ref>([=]()<sp/>{</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImGui_ImplVulkan_Shutdown();</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkDestroyDescriptorPool(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/>imguiPool,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="812"><highlight class="normal">}</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VulkanEngine::drawImgui(VkCommandBuffer<sp/>cmd,<sp/>VkImageView<sp/>targetImageView)<sp/>{</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/>VkRenderingAttachmentInfo<sp/>colorAttachment<sp/>=<sp/><ref refid="a00102_1a76bde95c72a4bf604cd433e439b2fa1b" kindref="member">VkInit::attachmentInfo</ref>(targetImageView,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>VK_IMAGE_LAYOUT_GENERAL);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/>VkRenderingInfo<sp/>renderInfo<sp/>=<sp/><ref refid="a00102_1a5e07e2e66058b5c4e6fb30840c396ab3" kindref="member">VkInit::renderingInfo</ref>(<ref refid="a00217_1ae2b5b9f37a4dd77e909d6a87c3290885" kindref="member">_swapchainExtent</ref>,<sp/>&amp;colorAttachment,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>vkCmdBeginRendering(cmd,<sp/>&amp;renderInfo);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/>ImGui_ImplVulkan_RenderDrawData(ImGui::GetDrawData(),<sp/>cmd);</highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/>vkCmdEndRendering(cmd);</highlight></codeline>
<codeline lineno="823"><highlight class="normal">}</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VulkanEngine::initTrianglePipeline()<sp/>{</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/>VkShaderModule<sp/>triangleFragShader;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="a00101_1a73da1142a76da292c64a9499aacf5bc2" kindref="member">VkUtil::loadShaderModule</ref>(</highlight><highlight class="stringliteral">&quot;colored_triangle.frag.spv&quot;</highlight><highlight class="normal">,<sp/><ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/>&amp;triangleFragShader))<sp/>{</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::error(</highlight><highlight class="stringliteral">&quot;[Engine]<sp/>error<sp/>loading<sp/>the<sp/>triangle<sp/>frag<sp/>shader&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::info(</highlight><highlight class="stringliteral">&quot;[Engine]<sp/>loaded<sp/>the<sp/>triangle<sp/>frag<sp/>shader&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/>VkShaderModule<sp/>triangleVertexShader;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="a00101_1a73da1142a76da292c64a9499aacf5bc2" kindref="member">VkUtil::loadShaderModule</ref>(</highlight><highlight class="stringliteral">&quot;colored_triangle.vert.spv&quot;</highlight><highlight class="normal">,<sp/><ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/>&amp;triangleVertexShader))<sp/>{</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::error(</highlight><highlight class="stringliteral">&quot;[Engine]<sp/>error<sp/>loading<sp/>the<sp/>triangle<sp/>vertex<sp/>shader&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::info(</highlight><highlight class="stringliteral">&quot;[Engine]<sp/>loaded<sp/>the<sp/>triangle<sp/>vert<sp/>shader&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>VkPipelineLayoutCreateInfo<sp/>pipelineLayout<sp/>=<sp/><ref refid="a00102_1ae22d46467876562f521852203947a73c" kindref="member">VkInit::pipelineLayoutCreateInfo</ref>();</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00074_1a3d55e176cc77828a9adaa05ac4413b99" kindref="member">VK_CHECK</ref>(vkCreatePipelineLayout(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/>&amp;pipelineLayout,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;_trianglePipelineLayout));</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00245" kindref="compound">PipelineBuilder</ref><sp/>pipelineBuilder;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/>pipelineBuilder.<ref refid="a00245_1a27a3416b889bde0dcce7c28bbb15ed46" kindref="member">_pipelineLayout</ref><sp/>=<sp/>_trianglePipelineLayout;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>connect<sp/>the<sp/>vertex<sp/>and<sp/>frag<sp/>to<sp/>the<sp/>pipeline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/>pipelineBuilder.<ref refid="a00245_1a2228754d15d46e04d91c45974282716a" kindref="member">setShaders</ref>(triangleVertexShader,<sp/>triangleFragShader);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//draw<sp/>Triangles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>pipelineBuilder.<ref refid="a00245_1ac64ce97ba92f9226bbb11ce387b52661" kindref="member">setInputToplogy</ref>(VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Filled<sp/>Triangles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>pipelineBuilder.<ref refid="a00245_1a692362aaf0f61503d00b0f4ff5cfb134" kindref="member">setPolygonMode</ref>(VK_POLYGON_MODE_FILL);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//no<sp/>backface<sp/>culling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/>pipelineBuilder.<ref refid="a00245_1a4bba978feda490ecd639e05cf5df0dad" kindref="member">setCullMode</ref>(VK_CULL_MODE_NONE,<sp/>VK_FRONT_FACE_CLOCKWISE);</highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//No<sp/>multisampling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>pipelineBuilder.<ref refid="a00245_1a586cf4dd2fa96f3a3e546ed5ee9aae0d" kindref="member">setMultisamplingNone</ref>();</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//no<sp/>blending</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/>pipelineBuilder.<ref refid="a00245_1a647ed08fe336a4e19382e20f6dfe8c51" kindref="member">disableBlending</ref>();</highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//no<sp/>depthTest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/>pipelineBuilder.<ref refid="a00245_1a965014baa4b56a3ad6c6c8981c2b001e" kindref="member">disableDepthtest</ref>();</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>connect<sp/>the<sp/>draw<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/>pipelineBuilder.<ref refid="a00245_1a98e8a722b30d50f7f9e224172a768061" kindref="member">setColorAttachmentFormat</ref>(<ref refid="a00217_1ad332e0c9421b787d1805a642c6a04c70" kindref="member">_drawImage</ref>.<ref refid="a00289_1ae4ccf662c664f3b9bdafa7459b746d8b" kindref="member">imageFormat</ref>);</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/>pipelineBuilder.<ref refid="a00245_1a8e9c83acd93cfcb0e9e21024d75c27cd" kindref="member">setDepthFormat</ref>(VK_FORMAT_D32_SFLOAT);</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//finally<sp/>build<sp/>the<sp/>pipeline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/>_trianglePipeline<sp/>=<sp/>pipelineBuilder.<ref refid="a00245_1ab68e37be1873638547e1912ee287a19e" kindref="member">buildPipeline</ref>(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>);</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//clean</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/>vkDestroyShaderModule(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/>triangleFragShader,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/>vkDestroyShaderModule(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/>triangleVertexShader,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1ab1707a6b3122db0d0fce56c13999367b" kindref="member">_mainDeletionQueue</ref>.<ref refid="a00285_1a91bdce3808d2f96671f38a610810c67b" kindref="member">pushFunction</ref>([&amp;]()<sp/>{</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkDestroyPipelineLayout(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/>_trianglePipelineLayout,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkDestroyPipeline(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/>_trianglePipeline,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="885"><highlight class="normal">}</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VulkanEngine::drawGeometry(VkCommandBuffer<sp/>cmd)<sp/>{</highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//reset<sp/>counters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1ac5fb2b0b7dea59777e271cc2d5a834bf" kindref="member">stats</ref>.<ref refid="a00249_1ad2e9038c2125482ce0c3e952ee4a1640" kindref="member">drawCallCount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1ac5fb2b0b7dea59777e271cc2d5a834bf" kindref="member">stats</ref>.<ref refid="a00249_1a09bb44af11d551238f5592baf3192ac0" kindref="member">triangleCount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>start<sp/>=<sp/>std::chrono::system_clock::now();</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint32_t&gt;<sp/>opaque_draws;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/>opaque_draws.reserve(<ref refid="a00217_1a0a37542e50f4f52c7a82dc5f3b7f3330" kindref="member">mainDrawContext</ref>.<ref refid="a00209_1a92fc7232c72c6f3b5dc4e12dd6606f17" kindref="member">OpaqueSurfaces</ref>.size());</highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="a00217_1a0a37542e50f4f52c7a82dc5f3b7f3330" kindref="member">mainDrawContext</ref>.<ref refid="a00209_1a92fc7232c72c6f3b5dc4e12dd6606f17" kindref="member">OpaqueSurfaces</ref>.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="a00217_1a101adc8c3d7479afd98d43338a0b9707" kindref="member">isVisible</ref>(<ref refid="a00217_1a0a37542e50f4f52c7a82dc5f3b7f3330" kindref="member">mainDrawContext</ref>.<ref refid="a00209_1a92fc7232c72c6f3b5dc4e12dd6606f17" kindref="member">OpaqueSurfaces</ref>[i],<sp/><ref refid="a00217_1adaef1ea968c30d0cc429146dfbb99330" kindref="member">mainCamera</ref>))<sp/>{</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opaque_draws.push_back(i);</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/>std::sort(opaque_draws.begin(),<sp/>opaque_draws.end(),<sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>iA,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>iB)<sp/>{</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>RenderObject&amp;<sp/>A<sp/>=<sp/>mainDrawContext.OpaqueSurfaces[iA];</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>RenderObject&amp;<sp/>B<sp/>=<sp/>mainDrawContext.OpaqueSurfaces[iB];</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(A.material<sp/>==<sp/>B.material)<sp/>{</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>A.indexBuffer<sp/>&lt;<sp/>B.indexBuffer;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>A.material<sp/>&lt;<sp/>B.material;</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//begin<sp/>a<sp/>render<sp/>pass<sp/><sp/>connected<sp/>to<sp/>our<sp/>draw<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/>VkRenderingAttachmentInfo<sp/>colorAttachment<sp/>=<sp/><ref refid="a00102_1a76bde95c72a4bf604cd433e439b2fa1b" kindref="member">VkInit::attachmentInfo</ref>(_drawImage.imageView,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>VK_IMAGE_LAYOUT_GENERAL);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/>VkRenderingAttachmentInfo<sp/>depthAttachment<sp/>=<sp/><ref refid="a00102_1afd70e1da9064d67d0f17d4d415f0761d" kindref="member">VkInit::depthAttachmentInfo</ref>(_depthImage.imageView,<sp/>VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL);</highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/>calledNum++;</highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/>VkRenderingInfo<sp/>renderInfo<sp/>=<sp/><ref refid="a00102_1a5e07e2e66058b5c4e6fb30840c396ab3" kindref="member">VkInit::renderingInfo</ref>(_drawExtent,<sp/>&amp;colorAttachment,<sp/>&amp;depthAttachment);</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/>vkCmdBeginRendering(cmd,<sp/>&amp;renderInfo);</highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00257" kindref="compound">AllocatedBuffer</ref><sp/>gpuSceneBufferData<sp/>=<sp/>createBuffer(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="a00269" kindref="compound">GPUSceneData</ref>),<sp/>VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT,<sp/>VMA_MEMORY_USAGE_CPU_TO_GPU);</highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/>getCurrentFrame()._deletionQueue.pushFunction([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]()<sp/>{</highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destroyBuffer(gpuSceneBufferData);</highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//write<sp/>the<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00269" kindref="compound">GPUSceneData</ref>*<sp/>sceneUniformData<sp/>=<sp/>(<ref refid="a00269" kindref="compound">GPUSceneData</ref>*)gpuSceneBufferData.<ref refid="a00257_1aad4979df72f7e827fd80171e42bfb463" kindref="member">allocation</ref>-&gt;GetMappedData();</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/>*sceneUniformData<sp/>=<sp/>sceneData;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//create<sp/>a<sp/>descriptor<sp/>set<sp/>that<sp/>binds<sp/>that<sp/>buffer<sp/>and<sp/>update<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/>VkDescriptorSet<sp/>globalDescriptor<sp/>=<sp/>getCurrentFrame()._frameDescriptors.allocate(_device,<sp/>_gpuSceneDataDescriptorLayout);</highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00177" kindref="compound">DescriptorWriter</ref><sp/>writer;</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/>writer.<ref refid="a00177_1a24d1efff56cfd0a03ffe5aa3ce7e17bf" kindref="member">writeBuffer</ref>(0,<sp/>gpuSceneBufferData.<ref refid="a00257_1afd80ecc9bf0b9e9fbe2cd70c81def540" kindref="member">buffer</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="a00269" kindref="compound">GPUSceneData</ref>),<sp/>0,<sp/>VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER);</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/>writer.<ref refid="a00177_1aa6d2deed567c313417fc333e55647814" kindref="member">updateSet</ref>(_device,<sp/>globalDescriptor);</highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Some<sp/>cache<sp/>vars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00277" kindref="compound">MaterialPipeline</ref>*<sp/>lastPipeline<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00281" kindref="compound">MaterialInstance</ref>*<sp/>lastMaterial<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/>VkBuffer<sp/>lastIndexBuffer<sp/>=<sp/>VK_NULL_HANDLE;</highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>draw<sp/>=<sp/>[&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a00205" kindref="compound">RenderObject</ref>&amp;<sp/>r)<sp/>{</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r.material<sp/>!=<sp/>lastMaterial)<sp/>{</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastMaterial<sp/>=<sp/>r.material;</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r.material-&gt;pipeline<sp/>!=<sp/>lastPipeline)<sp/>{</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastPipeline<sp/>=<sp/>r.material-&gt;<ref refid="a00277_1a5500b751b3a9fb3017151b515b577ad7" kindref="member">pipeline</ref>;</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkCmdBindPipeline(cmd,<sp/>VK_PIPELINE_BIND_POINT_GRAPHICS,<sp/>r.material-&gt;pipeline-&gt;pipeline);</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkCmdBindDescriptorSets(cmd,<sp/>VK_PIPELINE_BIND_POINT_GRAPHICS,r.material-&gt;pipeline-&gt;layout,<sp/>0,<sp/>1,</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;globalDescriptor,<sp/>0,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkViewport<sp/>viewport<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewport.x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewport.y<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewport.width<sp/>=<sp/>(float)_drawImage.imageExtent.width;</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewport.height<sp/>=<sp/>(float)_drawImage.imageExtent.height;</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewport.minDepth<sp/>=<sp/>0.f;</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viewport.maxDepth<sp/>=<sp/>1.f;</highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkCmdSetViewport(cmd,<sp/>0,<sp/>1,<sp/>&amp;viewport);</highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkRect2D<sp/>scissor<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scissor.offset.x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scissor.offset.y<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scissor.extent.width<sp/>=<sp/>_drawImage.imageExtent.width;</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scissor.extent.height<sp/>=<sp/>_drawImage.imageExtent.height;</highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkCmdSetScissor(cmd,<sp/>0,<sp/>1,<sp/>&amp;scissor);</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkCmdBindDescriptorSets(cmd,<sp/>VK_PIPELINE_BIND_POINT_GRAPHICS,<sp/>r.material-&gt;pipeline-&gt;layout,<sp/>1,<sp/>1,</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;r.material-&gt;materialSet,<sp/>0,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r.indexBuffer<sp/>!=<sp/>lastIndexBuffer)<sp/>{</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastIndexBuffer<sp/>=<sp/>r.indexBuffer;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkCmdBindIndexBuffer(cmd,<sp/>r.indexBuffer,<sp/>0,<sp/>VK_INDEX_TYPE_UINT32);</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>final<sp/>mesh<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00273" kindref="compound">GPUDrawPushConstants</ref><sp/>push_constants;</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>push_constants.<ref refid="a00273_1ac7769ead4f8c948c6a727ec202a6a625" kindref="member">worldMatrix</ref><sp/>=<sp/>r.transform;</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>push_constants.<ref refid="a00273_1a3d87824455c363095cd2bed7ebcb7f95" kindref="member">vertexBuffer</ref><sp/>=<sp/>r.vertexBufferAddress;</highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkCmdPushConstants(cmd,<sp/>r.material-&gt;pipeline-&gt;layout,<sp/>VK_SHADER_STAGE_VERTEX_BIT,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="a00273" kindref="compound">GPUDrawPushConstants</ref>),<sp/>&amp;push_constants);</highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stats.drawCallCount++;</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stats.triangleCount<sp/>+=<sp/>r.indexCount<sp/>/<sp/>3;</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkCmdDrawIndexed(cmd,<sp/>r.indexCount,<sp/>1,<sp/>r.firstIndex,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>r<sp/>:<sp/>opaque_draws)<sp/>{</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw(mainDrawContext.OpaqueSurfaces[r]);</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>r<sp/>:<sp/>mainDrawContext.TransparentSurfaces)<sp/>{</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw(r);</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/>vkCmdEndRendering(cmd);</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>end<sp/>=<sp/>std::chrono::system_clock::now();</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//convert<sp/>to<sp/>ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>elapsed<sp/>=<sp/>std::chrono::duration_cast&lt;std::chrono::microseconds&gt;(end<sp/>-<sp/>start);</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/>stats.meshDrawTime<sp/>=<sp/>elapsed.count()<sp/>/<sp/>1000.f;</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><ref refid="a00257" kindref="compound">AllocatedBuffer</ref><sp/><ref refid="a00217_1a29a528496c68c9f0c44414c466d1169f" kindref="member">VulkanEngine::createBuffer</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>allocSize,<sp/>VkBufferUsageFlags<sp/>usage,<sp/>VmaMemoryUsage<sp/>memoryUsage)<sp/>{</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/>VkBufferCreateInfo<sp/>bufferInfo<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/>bufferInfo.sType<sp/>=<sp/>VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO;</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/>bufferInfo.pNext<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/>bufferInfo.size<sp/>=<sp/>allocSize;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/>bufferInfo.usage<sp/>=<sp/>usage;</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/>VmaAllocationCreateInfo<sp/>vmaallocInfo<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/>vmaallocInfo.usage<sp/>=<sp/>memoryUsage;</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/>vmaallocInfo.flags<sp/>=<sp/>VMA_ALLOCATION_CREATE_MAPPED_BIT;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00257" kindref="compound">AllocatedBuffer</ref><sp/>newBuffer;</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>the<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00074_1a3d55e176cc77828a9adaa05ac4413b99" kindref="member">VK_CHECK</ref>(vmaCreateBuffer(<ref refid="a00217_1a75d08cfc1400cc46c7649b0041b0e0fc" kindref="member">_allocator</ref>,<sp/>&amp;bufferInfo,<sp/>&amp;vmaallocInfo,<sp/>&amp;newBuffer.<ref refid="a00257_1afd80ecc9bf0b9e9fbe2cd70c81def540" kindref="member">buffer</ref>,<sp/>&amp;newBuffer.<ref refid="a00257_1aad4979df72f7e827fd80171e42bfb463" kindref="member">allocation</ref>,</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;newBuffer.<ref refid="a00257_1ae8f702ce1eb0772813fdb282bbcf5083" kindref="member">info</ref>));</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newBuffer;</highlight></codeline>
<codeline lineno="1041"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a00217_1a3ce795645ea1f6bc1d7e7d462d47bcd6" kindref="member">VulkanEngine::destroyBuffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a00257" kindref="compound">AllocatedBuffer</ref>&amp;<sp/>buffer)<sp/>{</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/>vmaDestroyBuffer(<ref refid="a00217_1a75d08cfc1400cc46c7649b0041b0e0fc" kindref="member">_allocator</ref>,<sp/>buffer.<ref refid="a00257_1afd80ecc9bf0b9e9fbe2cd70c81def540" kindref="member">buffer</ref>,<sp/>buffer.<ref refid="a00257_1aad4979df72f7e827fd80171e42bfb463" kindref="member">allocation</ref>);</highlight></codeline>
<codeline lineno="1045"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><ref refid="a00265" kindref="compound">GPUMeshBuffers</ref><sp/><ref refid="a00217_1a2eef35ed3cc46cf090af65c68dc63243" kindref="member">VulkanEngine::uploadMesh</ref>(std::span&lt;uint32_t&gt;<sp/>indices,<sp/>std::span&lt;Vertex&gt;<sp/>vertices)<sp/>{</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>vertexBufferSize<sp/>=<sp/>vertices.size()<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="a00261" kindref="compound">Vertex</ref>);</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>indexBufferSize<sp/>=<sp/>indices.size()<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t);</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00265" kindref="compound">GPUMeshBuffers</ref><sp/>newSurface;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//create<sp/>vertex<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/>newSurface.<ref refid="a00265_1a1492235568eb70ea34448e73fe799334" kindref="member">vertexBuffer</ref><sp/>=<sp/><ref refid="a00217_1a29a528496c68c9f0c44414c466d1169f" kindref="member">createBuffer</ref>(vertexBufferSize,<sp/>VK_BUFFER_USAGE_STORAGE_BUFFER_BIT<sp/>|<sp/>VK_BUFFER_USAGE_TRANSFER_DST_BIT<sp/>|<sp/>VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT,</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VMA_MEMORY_USAGE_GPU_ONLY);</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//find<sp/>the<sp/>adress<sp/>of<sp/>the<sp/>vertex<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/>VkBufferDeviceAddressInfo<sp/>deviceAdressInfo{<sp/>.sType<sp/>=<sp/>VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO,.buffer<sp/>=<sp/>newSurface.<ref refid="a00265_1a1492235568eb70ea34448e73fe799334" kindref="member">vertexBuffer</ref>.<ref refid="a00257_1afd80ecc9bf0b9e9fbe2cd70c81def540" kindref="member">buffer</ref><sp/>};</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/>newSurface.<ref refid="a00265_1a07320f9b017b3298c541cecad2ca9756" kindref="member">vertexBufferAddress</ref><sp/>=<sp/>vkGetBufferDeviceAddress(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/>&amp;deviceAdressInfo);</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//create<sp/>index<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/>newSurface.<ref refid="a00265_1a36072bc102efd91d9cb0a2e2a91fb731" kindref="member">indexBuffer</ref><sp/>=<sp/><ref refid="a00217_1a29a528496c68c9f0c44414c466d1169f" kindref="member">createBuffer</ref>(indexBufferSize,<sp/>VK_BUFFER_USAGE_INDEX_BUFFER_BIT<sp/>|<sp/>VK_BUFFER_USAGE_TRANSFER_DST_BIT,</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VMA_MEMORY_USAGE_GPU_ONLY);</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00257" kindref="compound">AllocatedBuffer</ref><sp/>staging<sp/>=<sp/><ref refid="a00217_1a29a528496c68c9f0c44414c466d1169f" kindref="member">createBuffer</ref>(vertexBufferSize<sp/>+<sp/>indexBufferSize,<sp/>VK_BUFFER_USAGE_TRANSFER_SRC_BIT,<sp/>VMA_MEMORY_USAGE_CPU_ONLY);</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data<sp/>=<sp/>staging.<ref refid="a00257_1aad4979df72f7e827fd80171e42bfb463" kindref="member">allocation</ref>-&gt;GetMappedData();</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>vertex<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(data,<sp/>vertices.data(),<sp/>vertexBufferSize);</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>index<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)data<sp/>+<sp/>vertexBufferSize,<sp/>indices.data(),<sp/>indexBufferSize);</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1add07ae792339ef143c88dd43f0950f1d" kindref="member">immediate_submit</ref>([&amp;](VkCommandBuffer<sp/>cmd)<sp/>{</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkBufferCopy<sp/>vertexCopy{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertexCopy.dstOffset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertexCopy.srcOffset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertexCopy.size<sp/>=<sp/>vertexBufferSize;</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkCmdCopyBuffer(cmd,<sp/>staging.<ref refid="a00257_1afd80ecc9bf0b9e9fbe2cd70c81def540" kindref="member">buffer</ref>,<sp/>newSurface.<ref refid="a00265_1a1492235568eb70ea34448e73fe799334" kindref="member">vertexBuffer</ref>.<ref refid="a00257_1afd80ecc9bf0b9e9fbe2cd70c81def540" kindref="member">buffer</ref>,<sp/>1,<sp/>&amp;vertexCopy);</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkBufferCopy<sp/>indexCopy{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indexCopy.dstOffset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indexCopy.srcOffset<sp/>=<sp/>vertexBufferSize;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indexCopy.size<sp/>=<sp/>indexBufferSize;</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkCmdCopyBuffer(cmd,<sp/>staging.<ref refid="a00257_1afd80ecc9bf0b9e9fbe2cd70c81def540" kindref="member">buffer</ref>,<sp/>newSurface.<ref refid="a00265_1a36072bc102efd91d9cb0a2e2a91fb731" kindref="member">indexBuffer</ref>.<ref refid="a00257_1afd80ecc9bf0b9e9fbe2cd70c81def540" kindref="member">buffer</ref>,<sp/>1,<sp/>&amp;indexCopy);</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1a3ce795645ea1f6bc1d7e7d462d47bcd6" kindref="member">destroyBuffer</ref>(staging);</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newSurface;</highlight></codeline>
<codeline lineno="1099"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VulkanEngine::initMeshPipeline()<sp/>{</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::info(</highlight><highlight class="stringliteral">&quot;GOT<sp/>TO<sp/>INIT<sp/>MESH<sp/>pipeline&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/>VkShaderModule<sp/>triangleFragShader;</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="a00101_1a73da1142a76da292c64a9499aacf5bc2" kindref="member">VkUtil::loadShaderModule</ref>(</highlight><highlight class="stringliteral">&quot;tex_image.frag.spv&quot;</highlight><highlight class="normal">,<sp/><ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/>&amp;triangleFragShader))<sp/>{</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::error(</highlight><highlight class="stringliteral">&quot;Error<sp/>when<sp/>building<sp/>the<sp/>triangle<sp/>fragment<sp/>shader<sp/>module&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::info(</highlight><highlight class="stringliteral">&quot;Triangle<sp/>fragment<sp/>shader<sp/>succesfully<sp/>loaded&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/>VkShaderModule<sp/>triangleVertexShader;</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="a00101_1a73da1142a76da292c64a9499aacf5bc2" kindref="member">VkUtil::loadShaderModule</ref>(</highlight><highlight class="stringliteral">&quot;colored_triangle_mesh.vert.spv&quot;</highlight><highlight class="normal">,<sp/><ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/>&amp;triangleVertexShader))<sp/>{</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::error(</highlight><highlight class="stringliteral">&quot;Error<sp/>when<sp/>building<sp/>the<sp/>triangle<sp/>vertex<sp/>shader<sp/>module&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::info(</highlight><highlight class="stringliteral">&quot;Triangle<sp/>vertex<sp/>shader<sp/>succesfully<sp/>loaded&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/>VkPushConstantRange<sp/>bufferRange{};</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/>bufferRange.offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/>bufferRange.size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="a00273" kindref="compound">GPUDrawPushConstants</ref>);</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/>bufferRange.stageFlags<sp/>=<sp/>VK_SHADER_STAGE_VERTEX_BIT;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/>VkPipelineLayoutCreateInfo<sp/>pipeline_layout_info<sp/>=<sp/><ref refid="a00102_1ae22d46467876562f521852203947a73c" kindref="member">VkInit::pipelineLayoutCreateInfo</ref>();</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/>pipeline_layout_info.pPushConstantRanges<sp/>=<sp/>&amp;bufferRange;</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/>pipeline_layout_info.pushConstantRangeCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/>pipeline_layout_info.pSetLayouts<sp/>=<sp/>&amp;<ref refid="a00217_1a2d6c74d128b5dc95ce311ad39dac81f8" kindref="member">_singleImageDescriptorLayout</ref>;</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/>pipeline_layout_info.setLayoutCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00074_1a3d55e176cc77828a9adaa05ac4413b99" kindref="member">VK_CHECK</ref>(vkCreatePipelineLayout(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/>&amp;pipeline_layout_info,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;_meshPipelineLayout));</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00245" kindref="compound">PipelineBuilder</ref><sp/>pipelineBuilder;</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//use<sp/>the<sp/>triangle<sp/>layout<sp/>we<sp/>created</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/>pipelineBuilder.<ref refid="a00245_1a27a3416b889bde0dcce7c28bbb15ed46" kindref="member">_pipelineLayout</ref><sp/>=<sp/>_meshPipelineLayout;</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//connecting<sp/>the<sp/>vertex<sp/>and<sp/>pixel<sp/>shaders<sp/>to<sp/>the<sp/>pipeline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/>pipelineBuilder.<ref refid="a00245_1a2228754d15d46e04d91c45974282716a" kindref="member">setShaders</ref>(triangleVertexShader,<sp/>triangleFragShader);</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//it<sp/>will<sp/>draw<sp/>triangles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/>pipelineBuilder.<ref refid="a00245_1ac64ce97ba92f9226bbb11ce387b52661" kindref="member">setInputToplogy</ref>(VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST);</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//filled<sp/>triangles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/>pipelineBuilder.<ref refid="a00245_1a692362aaf0f61503d00b0f4ff5cfb134" kindref="member">setPolygonMode</ref>(VK_POLYGON_MODE_FILL);</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//no<sp/>backface<sp/>culling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/>pipelineBuilder.<ref refid="a00245_1a4bba978feda490ecd639e05cf5df0dad" kindref="member">setCullMode</ref>(VK_CULL_MODE_FRONT_BIT,<sp/>VK_FRONT_FACE_CLOCKWISE);</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//no<sp/>multisampling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/>pipelineBuilder.<ref refid="a00245_1a586cf4dd2fa96f3a3e546ed5ee9aae0d" kindref="member">setMultisamplingNone</ref>();</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//no<sp/>blending</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/>pipelineBuilder.<ref refid="a00245_1a647ed08fe336a4e19382e20f6dfe8c51" kindref="member">disableBlending</ref>();</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/>pipelineBuilder.<ref refid="a00245_1a4ebe0b6e3f37ac498322d7dda1ec8a2d" kindref="member">enableDepthtest</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>VK_COMPARE_OP_GREATER_OR_EQUAL);</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//connect<sp/>the<sp/>image<sp/>format<sp/>we<sp/>will<sp/>draw<sp/>into,<sp/>from<sp/>draw<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/>pipelineBuilder.<ref refid="a00245_1a98e8a722b30d50f7f9e224172a768061" kindref="member">setColorAttachmentFormat</ref>(<ref refid="a00217_1ad332e0c9421b787d1805a642c6a04c70" kindref="member">_drawImage</ref>.<ref refid="a00289_1ae4ccf662c664f3b9bdafa7459b746d8b" kindref="member">imageFormat</ref>);</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/>pipelineBuilder.<ref refid="a00245_1a8e9c83acd93cfcb0e9e21024d75c27cd" kindref="member">setDepthFormat</ref>(<ref refid="a00217_1a20eff0d0f15bd84d364edb01d8cb340d" kindref="member">_depthImage</ref>.<ref refid="a00289_1ae4ccf662c664f3b9bdafa7459b746d8b" kindref="member">imageFormat</ref>);</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"></highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//finally<sp/>build<sp/>the<sp/>pipeline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/>_meshPipeline<sp/>=<sp/>pipelineBuilder.<ref refid="a00245_1ab68e37be1873638547e1912ee287a19e" kindref="member">buildPipeline</ref>(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>);</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//clean<sp/>structures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/>vkDestroyShaderModule(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/>triangleFragShader,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/>vkDestroyShaderModule(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/>triangleVertexShader,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1ab1707a6b3122db0d0fce56c13999367b" kindref="member">_mainDeletionQueue</ref>.<ref refid="a00285_1a91bdce3808d2f96671f38a610810c67b" kindref="member">pushFunction</ref>([&amp;]()<sp/>{</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkDestroyPipelineLayout(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/>_meshPipelineLayout,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkDestroyPipeline(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/>_meshPipeline,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::info(</highlight><highlight class="stringliteral">&quot;Did<sp/>the<sp/>mesh<sp/>pipeline!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VulkanEngine::initDefaultData()<sp/>{</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::info(</highlight><highlight class="stringliteral">&quot;INIT<sp/>DEFAULT<sp/>DATA!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TEXTURES<sp/>manually<sp/>;-;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>white<sp/>=<sp/>0xFFFFFFFF;</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1ac5c036edc1d962cdebe3e260940e9740" kindref="member">_whiteImage</ref><sp/>=<sp/><ref refid="a00217_1a705e6ee910d1eae33b8b0cb5c6a770b0" kindref="member">createImage</ref>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)&amp;white,<sp/>VkExtent3D{1,<sp/>1,<sp/>1},<sp/>VK_FORMAT_R8G8B8A8_UNORM,</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VK_IMAGE_USAGE_SAMPLED_BIT);</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>grey<sp/>=<sp/>0xAAAAAAFF;</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1a97f75c9571330d57beb368b28fe5685f" kindref="member">_greyImage</ref><sp/>=<sp/><ref refid="a00217_1a705e6ee910d1eae33b8b0cb5c6a770b0" kindref="member">createImage</ref>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)&amp;grey,<sp/>VkExtent3D{1,<sp/>1,<sp/>1},<sp/>VK_FORMAT_R8G8B8A8_UNORM,</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VK_IMAGE_USAGE_SAMPLED_BIT);</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>black<sp/>=<sp/>0x000000FF;</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1a67ff3a8f056d68ada2920ce7bc88e0b3" kindref="member">_blackImage</ref><sp/>=<sp/><ref refid="a00217_1a705e6ee910d1eae33b8b0cb5c6a770b0" kindref="member">createImage</ref>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)&amp;black,<sp/>VkExtent3D{1,<sp/>1,<sp/>1},<sp/>VK_FORMAT_R8G8B8A8_UNORM,</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VK_IMAGE_USAGE_SAMPLED_BIT);</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Error<sp/>texture<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>magenta<sp/>=<sp/>0xFFF0FFFF;</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/>std::array&lt;uint32_t<sp/>,<sp/>16<sp/>*<sp/>16&gt;<sp/>pixels;</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>16;<sp/>x++)<sp/>{</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>16;<sp/>y++)<sp/>{</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixels[y*16<sp/>+<sp/>x]<sp/>=<sp/>((x<sp/>%<sp/>2)<sp/>^<sp/>(y<sp/>%<sp/>2))<sp/>?<sp/>magenta<sp/>:<sp/>black;</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1abad82df25c8216a872cafa95e2276986" kindref="member">_errorImage</ref><sp/>=<sp/><ref refid="a00217_1a705e6ee910d1eae33b8b0cb5c6a770b0" kindref="member">createImage</ref>(pixels.data(),<sp/>VkExtent3D<sp/>{16,<sp/>16,<sp/>1},<sp/>VK_FORMAT_R8G8B8A8_UNORM,</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VK_IMAGE_USAGE_SAMPLED_BIT);</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/>VkSamplerCreateInfo<sp/>sampl<sp/>=<sp/>{.sType<sp/>=<sp/>VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO<sp/>};</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/>sampl.magFilter<sp/>=<sp/>VK_FILTER_NEAREST;</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/>sampl.minFilter<sp/>=<sp/>VK_FILTER_NEAREST;</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/>vkCreateSampler(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/>&amp;sampl,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;<ref refid="a00217_1a417234053d867dd5eba9c54a3dfd987f" kindref="member">_defaultSamplerNearest</ref>);</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/>sampl.magFilter<sp/>=<sp/>VK_FILTER_LINEAR;</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/>sampl.minFilter<sp/>=<sp/>VK_FILTER_LINEAR;</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/>vkCreateSampler(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/>&amp;sampl,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;<ref refid="a00217_1ae9e37119779c3c298affe9d8768e1237" kindref="member">_defaultSamplerLinear</ref>);</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//material<sp/>test<sp/>:)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00201" kindref="compound">GLTFMetallic_roughness::MaterialResources</ref><sp/>materialResources;</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//default<sp/>material<sp/>textures;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/>materialResources.<ref refid="a00201_1a3dd3a1bd7517a31b58583f30940c3441" kindref="member">colorImage</ref><sp/>=<sp/><ref refid="a00217_1ac5c036edc1d962cdebe3e260940e9740" kindref="member">_whiteImage</ref>;</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/>materialResources.<ref refid="a00201_1a14de3bb8c602f204bcf5d6c2ccb7ee2a" kindref="member">colorSampler</ref><sp/>=<sp/><ref refid="a00217_1ae9e37119779c3c298affe9d8768e1237" kindref="member">_defaultSamplerLinear</ref>;</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/>materialResources.<ref refid="a00201_1af7791b1215a1fee0b5897e1d39a3c9ed" kindref="member">metalRoughImage</ref><sp/>=<sp/><ref refid="a00217_1ac5c036edc1d962cdebe3e260940e9740" kindref="member">_whiteImage</ref>;</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/>materialResources.<ref refid="a00201_1aad3abdd50028f1774271881c1de7dc85" kindref="member">metalRoughSampler</ref><sp/>=<sp/><ref refid="a00217_1ae9e37119779c3c298affe9d8768e1237" kindref="member">_defaultSamplerLinear</ref>;</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>the<sp/>UB<sp/>for<sp/>the<sp/>material<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00257" kindref="compound">AllocatedBuffer</ref><sp/>materialConstants<sp/>=<sp/><ref refid="a00217_1a29a528496c68c9f0c44414c466d1169f" kindref="member">createBuffer</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="a00197" kindref="compound">GLTFMetallic_roughness::MaterialConstants</ref>),<sp/>VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT,<sp/>VMA_MEMORY_USAGE_CPU_TO_GPU);</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//write<sp/>to<sp/>the<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00197" kindref="compound">GLTFMetallic_roughness::MaterialConstants</ref>*<sp/>sceneUniformData<sp/>=<sp/>(<ref refid="a00197" kindref="compound">GLTFMetallic_roughness::MaterialConstants</ref>*)<sp/>materialConstants.<ref refid="a00257_1aad4979df72f7e827fd80171e42bfb463" kindref="member">allocation</ref>-&gt;GetMappedData();</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/>sceneUniformData-&gt;<ref refid="a00197_1a006333f251c1c42685a1327f5e28d2b5" kindref="member">colorFactors</ref><sp/>=<sp/>glm::vec4{1,<sp/>1,<sp/>1,<sp/>1};</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/>sceneUniformData-&gt;<ref refid="a00197_1a0879b1b307e3fc6093979270f0d88684" kindref="member">metalRoughFactors</ref><sp/>=<sp/>glm::vec4{1,<sp/>0.5,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/>materialResources.<ref refid="a00201_1af0402d122ad15ba381be88d540c77fa7" kindref="member">dataBuffer</ref><sp/>=<sp/>materialConstants.<ref refid="a00257_1afd80ecc9bf0b9e9fbe2cd70c81def540" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/>materialResources.<ref refid="a00201_1a7f4e87b350163adac17d662bef1eab3b" kindref="member">dataBufferOffset</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1a019c69495963902de318bf1005034bda" kindref="member">defaultData</ref><sp/>=<sp/><ref refid="a00217_1a94db50b96840113529b5c31ee1eff0f3" kindref="member">metalRoughMaterial</ref>.<ref refid="a00193_1a744d03ddb8fe03ea8ee07f2ae3b42de5" kindref="member">writeMaterial</ref>(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/><ref refid="a00074_1a5d0f6bec114ddc0ce218cc9986d7bcacaef066d570813444bb800489925d3f529" kindref="member">MaterialPass::MainColor</ref>,<sp/>materialResources,<sp/><ref refid="a00217_1a429373e20598afe382d2d5ea1e5f32a3" kindref="member">globalDescriptorAllocator</ref>);</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1ab1707a6b3122db0d0fce56c13999367b" kindref="member">_mainDeletionQueue</ref>.<ref refid="a00285_1a91bdce3808d2f96671f38a610810c67b" kindref="member">pushFunction</ref>([=,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">]()<sp/>{</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//material</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00217_1a94db50b96840113529b5c31ee1eff0f3" kindref="member">metalRoughMaterial</ref>.<ref refid="a00193_1a96ff6cb8fd8d01b16921be3900827939" kindref="member">destroy</ref>(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/><ref refid="a00217_1a019c69495963902de318bf1005034bda" kindref="member">defaultData</ref>.<ref refid="a00281_1ab6a8270117524873601400f0bcb401db" kindref="member">passType</ref>);</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00217_1a3ce795645ea1f6bc1d7e7d462d47bcd6" kindref="member">destroyBuffer</ref>(materialConstants);</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*testMeshes<sp/>=<sp/>VkLoader::loadGltfMeshes(this,<sp/>&quot;../../Assets/structure.glb&quot;).value();</highlight></codeline>
<codeline lineno="1249"><highlight class="comment"></highlight></codeline>
<codeline lineno="1250"><highlight class="comment"></highlight></codeline>
<codeline lineno="1251"><highlight class="comment"><sp/><sp/><sp/><sp/>for<sp/>(auto&amp;<sp/>m:<sp/>testMeshes)<sp/>{</highlight></codeline>
<codeline lineno="1252"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;MeshNode&gt;<sp/>newNode<sp/>=<sp/>std::make_shared&lt;MeshNode&gt;();</highlight></codeline>
<codeline lineno="1253"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newNode-&gt;mesh<sp/>=<sp/>m;</highlight></codeline>
<codeline lineno="1254"><highlight class="comment"></highlight></codeline>
<codeline lineno="1255"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newNode-&gt;localTransform<sp/>=<sp/>glm::mat4{<sp/>1.f<sp/>};</highlight></codeline>
<codeline lineno="1256"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newNode-&gt;worldTransform<sp/>=<sp/>glm::mat4{<sp/>1.f<sp/>};</highlight></codeline>
<codeline lineno="1257"><highlight class="comment"></highlight></codeline>
<codeline lineno="1258"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(auto&amp;<sp/>s<sp/>:<sp/>newNode-&gt;mesh-&gt;surfaces)<sp/>{</highlight></codeline>
<codeline lineno="1259"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.material<sp/>=<sp/>std::make_shared&lt;GLTFMaterial&gt;(defaultData);</highlight></codeline>
<codeline lineno="1260"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1261"><highlight class="comment"></highlight></codeline>
<codeline lineno="1262"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loadedNodes[m-&gt;name]<sp/>=<sp/>std::move(newNode);</highlight></codeline>
<codeline lineno="1263"><highlight class="comment"><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1ab1707a6b3122db0d0fce56c13999367b" kindref="member">_mainDeletionQueue</ref>.<ref refid="a00285_1a91bdce3808d2f96671f38a610810c67b" kindref="member">pushFunction</ref>([&amp;](){</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>mesh<sp/>:<sp/>testMeshes)<sp/>{</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00217_1a3ce795645ea1f6bc1d7e7d462d47bcd6" kindref="member">destroyBuffer</ref>(mesh-&gt;meshBuffers.vertexBuffer);</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00217_1a3ce795645ea1f6bc1d7e7d462d47bcd6" kindref="member">destroyBuffer</ref>(mesh-&gt;meshBuffers.indexBuffer);</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1ab1707a6b3122db0d0fce56c13999367b" kindref="member">_mainDeletionQueue</ref>.<ref refid="a00285_1a91bdce3808d2f96671f38a610810c67b" kindref="member">pushFunction</ref>([&amp;]()<sp/>{</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00217_1a999dceb09a0a03ea7333d2b5f901e35d" kindref="member">destroyImage</ref>(<ref refid="a00217_1a67ff3a8f056d68ada2920ce7bc88e0b3" kindref="member">_blackImage</ref>);</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00217_1a999dceb09a0a03ea7333d2b5f901e35d" kindref="member">destroyImage</ref>(<ref refid="a00217_1ac5c036edc1d962cdebe3e260940e9740" kindref="member">_whiteImage</ref>);</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00217_1a999dceb09a0a03ea7333d2b5f901e35d" kindref="member">destroyImage</ref>(<ref refid="a00217_1a97f75c9571330d57beb368b28fe5685f" kindref="member">_greyImage</ref>);</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00217_1a999dceb09a0a03ea7333d2b5f901e35d" kindref="member">destroyImage</ref>(<ref refid="a00217_1abad82df25c8216a872cafa95e2276986" kindref="member">_errorImage</ref>);</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkDestroySampler(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/><ref refid="a00217_1ae9e37119779c3c298affe9d8768e1237" kindref="member">_defaultSamplerLinear</ref>,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkDestroySampler(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/><ref refid="a00217_1a417234053d867dd5eba9c54a3dfd987f" kindref="member">_defaultSamplerNearest</ref>,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/>spdlog::info(</highlight><highlight class="stringliteral">&quot;Done<sp/>with<sp/>default<sp/>data&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VulkanEngine::resizeSwapchain()<sp/>{</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/>vkDeviceWaitIdle(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>);</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/>destroySwapchain();</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/>h;</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/>glfwGetWindowSize(<ref refid="a00217_1a66a9cc0c8097072f24c38e687bf4a51a" kindref="member">_window</ref>,<sp/>&amp;w,<sp/>&amp;h);</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1a1b355560c30d73de48d86023dcdea5f4" kindref="member">_windowExtent</ref>.width<sp/>=<sp/>w;</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1a1b355560c30d73de48d86023dcdea5f4" kindref="member">_windowExtent</ref>.height<sp/>=<sp/>h;</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/>createSwapchain(<ref refid="a00217_1a1b355560c30d73de48d86023dcdea5f4" kindref="member">_windowExtent</ref>.width,<sp/><ref refid="a00217_1a1b355560c30d73de48d86023dcdea5f4" kindref="member">_windowExtent</ref>.height);</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/>resizeRequested<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1301"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><ref refid="a00289" kindref="compound">AllocatedImage</ref><sp/><ref refid="a00217_1a705e6ee910d1eae33b8b0cb5c6a770b0" kindref="member">VulkanEngine::createImage</ref>(VkExtent3D<sp/>size,<sp/>VkFormat<sp/>format,<sp/>VkImageUsageFlags<sp/>usage,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mipmapped)<sp/>{</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00289" kindref="compound">AllocatedImage</ref><sp/>newImage;</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/>newImage.<ref refid="a00289_1ae4ccf662c664f3b9bdafa7459b746d8b" kindref="member">imageFormat</ref><sp/>=<sp/>format;</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/>newImage.<ref refid="a00289_1a3c0016e1c5c44bb21f336486da7c9d66" kindref="member">imageExtent</ref><sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/>VkImageCreateInfo<sp/>imgInfo<sp/>=<sp/><ref refid="a00102_1af6244bbb89d93fabe28d83cb4203da94" kindref="member">VkInit::imageCreateInfo</ref>(format,<sp/>usage,<sp/>size);</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mipmapped)<sp/>{</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imgInfo.mipLevels<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint32_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(std::floor(std::log2(std::max(size.width,<sp/>size.height))))<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Always<sp/>allocate<sp/>images<sp/>on<sp/>dedicated<sp/>GPU<sp/>memory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/>VmaAllocationCreateInfo<sp/>allocInfo<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/>allocInfo.usage<sp/>=<sp/>VMA_MEMORY_USAGE_GPU_ONLY;</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/>allocInfo.requiredFlags<sp/>=<sp/>VkMemoryPropertyFlags(VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT);</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>and<sp/>create<sp/>the<sp/>image.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00074_1a3d55e176cc77828a9adaa05ac4413b99" kindref="member">VK_CHECK</ref>(vmaCreateImage(<ref refid="a00217_1a75d08cfc1400cc46c7649b0041b0e0fc" kindref="member">_allocator</ref>,<sp/>&amp;imgInfo,<sp/>&amp;allocInfo,<sp/>&amp;newImage.<ref refid="a00289_1a13e4a58bd70b09a3743df9effc0dc9f6" kindref="member">image</ref>,<sp/>&amp;newImage.<ref refid="a00289_1a6374bbe549aabc16f21c58b717329028" kindref="member">allocation</ref>,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>the<sp/>format<sp/>is<sp/>depth<sp/>we<sp/>ned<sp/>the<sp/>correct<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/>VkImageAspectFlags<sp/>aspectFlag<sp/>=<sp/>VK_IMAGE_ASPECT_COLOR_BIT;</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(format<sp/>==<sp/>VK_FORMAT_D32_SFLOAT)<sp/>{</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aspectFlag<sp/>=<sp/>VK_IMAGE_ASPECT_DEPTH_BIT;</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//build<sp/>the<sp/>image-view</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/>VkImageViewCreateInfo<sp/>viewInfo<sp/>=<sp/><ref refid="a00102_1a57731c73c6a5a9b41a591f594bedd96c" kindref="member">VkInit::imageViewCreateInfo</ref>(format,<sp/>newImage.<ref refid="a00289_1a13e4a58bd70b09a3743df9effc0dc9f6" kindref="member">image</ref>,<sp/>aspectFlag);</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/>viewInfo.subresourceRange.levelCount<sp/>=<sp/>imgInfo.mipLevels;</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"></highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00074_1a3d55e176cc77828a9adaa05ac4413b99" kindref="member">VK_CHECK</ref>(vkCreateImageView(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/>&amp;viewInfo,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;newImage.<ref refid="a00289_1ad124234921b26ec7e9b0cc5f603d5726" kindref="member">imageView</ref>));</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"></highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newImage;</highlight></codeline>
<codeline lineno="1334"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"></highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><ref refid="a00289" kindref="compound">AllocatedImage</ref><sp/><ref refid="a00217_1a705e6ee910d1eae33b8b0cb5c6a770b0" kindref="member">VulkanEngine::createImage</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/>VkExtent3D<sp/>size,<sp/>VkFormat<sp/>format,<sp/>VkImageUsageFlags<sp/>usage,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mipmapped)<sp/>{</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dataSize<sp/>=<sp/>size.depth<sp/>*<sp/>size.width<sp/>*<sp/>size.height<sp/>*<sp/>4;</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>im<sp/>sure<sp/>this<sp/>buffer<sp/>will<sp/>have<sp/>a<sp/>valid<sp/>parent<sp/>pool<sp/>;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00257" kindref="compound">AllocatedBuffer</ref><sp/>uploadBuffer<sp/>=<sp/><ref refid="a00217_1a29a528496c68c9f0c44414c466d1169f" kindref="member">createBuffer</ref>(dataSize,<sp/>VK_BUFFER_USAGE_TRANSFER_SRC_BIT,<sp/>VMA_MEMORY_USAGE_CPU_TO_GPU);</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>;-;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(uploadBuffer.<ref refid="a00257_1ae8f702ce1eb0772813fdb282bbcf5083" kindref="member">info</ref>.pMappedData,<sp/>data,<sp/>dataSize);</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"></highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00289" kindref="compound">AllocatedImage</ref><sp/>newImage<sp/>=<sp/><ref refid="a00217_1a705e6ee910d1eae33b8b0cb5c6a770b0" kindref="member">createImage</ref>(size,<sp/>format,<sp/>usage<sp/>|<sp/>VK_IMAGE_USAGE_TRANSFER_DST_BIT<sp/>|<sp/>VK_IMAGE_USAGE_TRANSFER_SRC_BIT,<sp/>mipmapped);</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1add07ae792339ef143c88dd43f0950f1d" kindref="member">immediate_submit</ref>([&amp;](VkCommandBuffer<sp/>cmd)<sp/>{</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00101_1a875b1e47dc0c1a3d683aa56a048004a1" kindref="member">VkUtil::transitionImage</ref>(cmd,<sp/>newImage.<ref refid="a00289_1a13e4a58bd70b09a3743df9effc0dc9f6" kindref="member">image</ref>,<sp/>VK_IMAGE_LAYOUT_UNDEFINED,<sp/>VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL);</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkBufferImageCopy<sp/>copyRegion<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copyRegion.bufferOffset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copyRegion.bufferRowLength<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copyRegion.bufferImageHeight<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"></highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copyRegion.imageSubresource.aspectMask<sp/>=<sp/>VK_IMAGE_ASPECT_COLOR_BIT;</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copyRegion.imageSubresource.mipLevel<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copyRegion.imageSubresource.baseArrayLayer<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copyRegion.imageSubresource.layerCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copyRegion.imageExtent<sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"></highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//copy<sp/>the<sp/>buffer<sp/>into<sp/>the<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkCmdCopyBufferToImage(cmd,<sp/>uploadBuffer.<ref refid="a00257_1afd80ecc9bf0b9e9fbe2cd70c81def540" kindref="member">buffer</ref>,<sp/>newImage.<ref refid="a00289_1a13e4a58bd70b09a3743df9effc0dc9f6" kindref="member">image</ref>,<sp/>VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL,<sp/>1,<sp/>&amp;copyRegion);</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mipmapped)<sp/>{</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00101_1ab2f70afca891c15b7a86f4d2d5c67931" kindref="member">VkUtil::generateMipMaps</ref>(cmd,<sp/>newImage.<ref refid="a00289_1a13e4a58bd70b09a3743df9effc0dc9f6" kindref="member">image</ref>,<sp/>VkExtent2D{newImage.imageExtent.width,<sp/>newImage.imageExtent.height});</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00101_1a875b1e47dc0c1a3d683aa56a048004a1" kindref="member">VkUtil::transitionImage</ref>(cmd,<sp/>newImage.<ref refid="a00289_1a13e4a58bd70b09a3743df9effc0dc9f6" kindref="member">image</ref>,<sp/>VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL,</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL);</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1a3ce795645ea1f6bc1d7e7d462d47bcd6" kindref="member">destroyBuffer</ref>(uploadBuffer);</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"></highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newImage;</highlight></codeline>
<codeline lineno="1374"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a00217_1a999dceb09a0a03ea7333d2b5f901e35d" kindref="member">VulkanEngine::destroyImage</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a00289" kindref="compound">AllocatedImage</ref><sp/>&amp;img)<sp/>{</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/>vkDestroyImageView(<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/>img.<ref refid="a00289_1ad124234921b26ec7e9b0cc5f603d5726" kindref="member">imageView</ref>,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/>vmaDestroyImage(<ref refid="a00217_1a75d08cfc1400cc46c7649b0041b0e0fc" kindref="member">_allocator</ref>,<sp/>img.<ref refid="a00289_1a13e4a58bd70b09a3743df9effc0dc9f6" kindref="member">image</ref>,<sp/>img.<ref refid="a00289_1a6374bbe549aabc16f21c58b717329028" kindref="member">allocation</ref>);</highlight></codeline>
<codeline lineno="1379"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"></highlight></codeline>
<codeline lineno="1381"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a00217_1ad2da415dabe3add3882952382efbb926" kindref="member">VulkanEngine::updateScene</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>start<sp/>=<sp/>std::chrono::system_clock::now();</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1adaef1ea968c30d0cc429146dfbb99330" kindref="member">mainCamera</ref>.<ref refid="a00153_1a42cda7239981a5618660d04bd5893556" kindref="member">update</ref>();</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"></highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1a0a37542e50f4f52c7a82dc5f3b7f3330" kindref="member">mainDrawContext</ref>.<ref refid="a00209_1a92fc7232c72c6f3b5dc4e12dd6606f17" kindref="member">OpaqueSurfaces</ref>.clear();</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1a0a37542e50f4f52c7a82dc5f3b7f3330" kindref="member">mainDrawContext</ref>.<ref refid="a00209_1ad057160f65e0657e137a740ec37d31c2" kindref="member">TransparentSurfaces</ref>.clear();</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"></highlight></codeline>
<codeline lineno="1390"><highlight class="normal"></highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1aae6a5015a54ca1697d8ea5a4891af4d1" kindref="member">sceneData</ref>.<ref refid="a00269_1a11a59cecab808ab8f32a2229cb9cbc05" kindref="member">view</ref><sp/>=<sp/>glm::inverse(glm::translate(glm::mat4{1.f},<sp/><ref refid="a00217_1adaef1ea968c30d0cc429146dfbb99330" kindref="member">mainCamera</ref>.<ref refid="a00153_1a04b5db2c530d8630660e8cfb93a4b3b5" kindref="member">position</ref>)<sp/>*<sp/><ref refid="a00217_1adaef1ea968c30d0cc429146dfbb99330" kindref="member">mainCamera</ref>.<ref refid="a00153_1aab60f6efb69f691f2036b5de5897f8a9" kindref="member">getRotationMatrix</ref>());</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1aae6a5015a54ca1697d8ea5a4891af4d1" kindref="member">sceneData</ref>.<ref refid="a00269_1a94a8aebb2509f463fdd5930a18e220a9" kindref="member">proj</ref><sp/>=<sp/>glm::perspective(glm::radians(<ref refid="a00217_1adaef1ea968c30d0cc429146dfbb99330" kindref="member">mainCamera</ref>.<ref refid="a00153_1aff7393c9cfbccd7e369091f00008da93" kindref="member">fov</ref>),(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>(<ref refid="a00217_1acdf79fe860137de04a46809a804094e4" kindref="member">_drawExtent</ref>.width<sp/>/<sp/><ref refid="a00217_1acdf79fe860137de04a46809a804094e4" kindref="member">_drawExtent</ref>.height),<sp/><ref refid="a00217_1adaef1ea968c30d0cc429146dfbb99330" kindref="member">mainCamera</ref>.<ref refid="a00153_1ad96efd3e1e4ec33dddb1d25f05d02ff2" kindref="member">near</ref>,<sp/><ref refid="a00217_1adaef1ea968c30d0cc429146dfbb99330" kindref="member">mainCamera</ref>.<ref refid="a00153_1a9f30b77edf6485e001a98d21ff5f17fe" kindref="member">far</ref>);</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"></highlight></codeline>
<codeline lineno="1394"><highlight class="normal"></highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1aae6a5015a54ca1697d8ea5a4891af4d1" kindref="member">sceneData</ref>.<ref refid="a00269_1a94a8aebb2509f463fdd5930a18e220a9" kindref="member">proj</ref>[1][1]<sp/>*=<sp/>-1;</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1aae6a5015a54ca1697d8ea5a4891af4d1" kindref="member">sceneData</ref>.<ref refid="a00269_1a1eb16232bc41fa47f782f3848e6d5419" kindref="member">viewproj</ref><sp/>=<sp/><ref refid="a00217_1aae6a5015a54ca1697d8ea5a4891af4d1" kindref="member">sceneData</ref>.<ref refid="a00269_1a94a8aebb2509f463fdd5930a18e220a9" kindref="member">proj</ref><sp/>*<sp/><ref refid="a00217_1aae6a5015a54ca1697d8ea5a4891af4d1" kindref="member">sceneData</ref>.<ref refid="a00269_1a11a59cecab808ab8f32a2229cb9cbc05" kindref="member">view</ref>;</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//some<sp/>default<sp/>lighting<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1aae6a5015a54ca1697d8ea5a4891af4d1" kindref="member">sceneData</ref>.<ref refid="a00269_1a80aa527f0dd23ad93ce82ccae46a2bb8" kindref="member">ambientColor</ref><sp/>=<sp/>glm::vec4(.1f);</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1aae6a5015a54ca1697d8ea5a4891af4d1" kindref="member">sceneData</ref>.<ref refid="a00269_1ae6655907e76d7de3832f5d9d15bb812f" kindref="member">sunlightColor</ref><sp/>=<sp/>glm::vec4(1.f);</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1aae6a5015a54ca1697d8ea5a4891af4d1" kindref="member">sceneData</ref>.<ref refid="a00269_1a0d0ad9dbe48fd5cffa61d7b7e7a08026" kindref="member">sunLightDirection</ref><sp/>=<sp/>glm::vec4(0,1,0.5,1.f);</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"></highlight></codeline>
<codeline lineno="1404"><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>end<sp/>=<sp/>std::chrono::system_clock::now();</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"></highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>elapsed<sp/>=<sp/>std::chrono::duration_cast&lt;std::chrono::microseconds&gt;(end<sp/>-<sp/>start);</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00217_1ac5fb2b0b7dea59777e271cc2d5a834bf" kindref="member">stats</ref>.<ref refid="a00249_1a63684651caeeea776748ffec6860e3d2" kindref="member">sceneUpdateTime</ref><sp/>=<sp/>elapsed.count()<sp/>/<sp/>1000.f;</highlight></codeline>
<codeline lineno="1409"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"></highlight></codeline>
<codeline lineno="1411"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="a00217_1a101adc8c3d7479afd98d43338a0b9707" kindref="member">VulkanEngine::isVisible</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a00205" kindref="compound">RenderObject</ref><sp/>&amp;obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a00153" kindref="compound">Camera</ref>&amp;<sp/>camera)<sp/>{</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/>std::array&lt;glm::vec3,<sp/>8&gt;<sp/>corners<sp/>{</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::vec3<sp/>{<sp/>1,<sp/>1,<sp/>1<sp/>},</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::vec3<sp/>{<sp/>1,<sp/>1,<sp/>-1<sp/>},</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::vec3<sp/>{<sp/>1,<sp/>-1,<sp/>1<sp/>},</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::vec3<sp/>{<sp/>1,<sp/>-1,<sp/>-1<sp/>},</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::vec3<sp/>{<sp/>-1,<sp/>1,<sp/>1<sp/>},</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::vec3<sp/>{<sp/>-1,<sp/>1,<sp/>-1<sp/>},</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::vec3<sp/>{<sp/>-1,<sp/>-1,<sp/>1<sp/>},</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::vec3<sp/>{<sp/>-1,<sp/>-1,<sp/>-1<sp/>},</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//glm::mat4<sp/>view<sp/>=<sp/>glm::inverse(glm::translate(glm::mat4{1.f},<sp/>mainCamera.position)<sp/>*<sp/>mainCamera.getRotationMatrix());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//glm::mat4<sp/>proj<sp/>=<sp/>glm::perspective(glm::radians(mainCamera.fov),(float)<sp/>(_swapchainExtent.width<sp/>/<sp/>_swapchainExtent.height),<sp/>0.1f,<sp/>100000000.f);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1425"><highlight class="normal"></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"></highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//proj[1][1]<sp/>*=<sp/>-1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1428"><highlight class="normal"></highlight></codeline>
<codeline lineno="1429"><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/>glm::mat4<sp/>matrix<sp/>=<sp/><ref refid="a00217_1aae6a5015a54ca1697d8ea5a4891af4d1" kindref="member">sceneData</ref>.<ref refid="a00269_1a1eb16232bc41fa47f782f3848e6d5419" kindref="member">viewproj</ref><sp/>*<sp/>obj.<ref refid="a00205_1a5aa60e9c01b069dcddebd1a913e0999c" kindref="member">transform</ref>;</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"></highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/>glm::vec3<sp/>min<sp/>=<sp/>{1.5,<sp/>1.5,<sp/>1.5};</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/>glm::vec3<sp/>max<sp/>=<sp/>{-1.5,<sp/>-1.5,<sp/>-1.5};</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>8;<sp/>c++)<sp/>{</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"></highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//project<sp/>each<sp/>corner<sp/>into<sp/>clip<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::vec4<sp/>v<sp/>=<sp/>matrix<sp/>*<sp/>glm::vec4(obj.<ref refid="a00205_1a14bf8548f4c7a416e787a3508f833a50" kindref="member">bounds</ref>.<ref refid="a00253_1ac18b521fb51a535fa927dc590b1a4652" kindref="member">origin</ref><sp/>+<sp/>(corners[c]<sp/>*<sp/>obj.<ref refid="a00205_1a14bf8548f4c7a416e787a3508f833a50" kindref="member">bounds</ref>.<ref refid="a00253_1a65c365448edaaf81a9fd959272e77e8e" kindref="member">extents</ref>),<sp/>1.f);</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"></highlight></codeline>
<codeline lineno="1440"><highlight class="normal"></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//perspective<sp/>correction<sp/>?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v.x<sp/>=<sp/>v.x<sp/>/<sp/>v.w;</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v.y<sp/>=<sp/>v.y<sp/>/<sp/>v.w;</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v.z<sp/>=<sp/>v.z<sp/>/<sp/>v.w;</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"></highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min<sp/>=<sp/>glm::min(glm::vec3{<sp/>v.x,<sp/>v.y,<sp/>v.z},<sp/>min);</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>=<sp/>glm::max(glm::vec3{<sp/>v.x,<sp/>v.y,<sp/>v.z},<sp/>max);</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"></highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"></highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>the<sp/>clip<sp/>space<sp/>box<sp/>is<sp/>within<sp/>the<sp/>view</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(min.z<sp/>&gt;<sp/>1.f<sp/>||<sp/>max.z<sp/>&lt;<sp/>0.f<sp/>||<sp/>min.x<sp/>&gt;<sp/>1.f<sp/>||<sp/>max.x<sp/>&lt;<sp/>-1.f<sp/>||<sp/>min.y<sp/>&gt;<sp/>1.f<sp/>||<sp/>max.y<sp/>&lt;<sp/>-1.f)<sp/>{</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"></highlight></codeline>
<codeline lineno="1458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"></highlight></codeline>
<codeline lineno="1461"><highlight class="normal"></highlight></codeline>
<codeline lineno="1462"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a00193_1ac6b86602d156a5555b3799b9172c674e" kindref="member">GLTFMetallic_roughness::buildPipelines</ref>(<ref refid="a00217" kindref="compound">VulkanEngine</ref><sp/>*engine)<sp/>{</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/>VkShaderModule<sp/>meshFragShader;</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="a00101_1a73da1142a76da292c64a9499aacf5bc2" kindref="member">VkUtil::loadShaderModule</ref>(</highlight><highlight class="stringliteral">&quot;mesh.frag.spv&quot;</highlight><highlight class="normal">,<sp/>engine-&gt;<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/>&amp;meshFragShader))<sp/>{</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::error(</highlight><highlight class="stringliteral">&quot;Error<sp/>when<sp/>building<sp/>the<sp/>[mesh]<sp/>[fragment]<sp/>shader&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/>VkShaderModule<sp/>meshVertexShader;</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="a00101_1a73da1142a76da292c64a9499aacf5bc2" kindref="member">VkUtil::loadShaderModule</ref>(</highlight><highlight class="stringliteral">&quot;mesh.vert.spv&quot;</highlight><highlight class="normal">,<sp/>engine-&gt;<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/>&amp;meshVertexShader))<sp/>{</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spdlog::error(</highlight><highlight class="stringliteral">&quot;Error<sp/>when<sp/>building<sp/>the<sp/>[mesh]<sp/>[vertex]<sp/>shader&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"></highlight></codeline>
<codeline lineno="1473"><highlight class="normal"></highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/>VkPushConstantRange<sp/>matrixRange{};</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/>matrixRange.offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/>matrixRange.size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="a00273" kindref="compound">GPUDrawPushConstants</ref>);</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/>matrixRange.stageFlags<sp/>=<sp/>VK_SHADER_STAGE_VERTEX_BIT;</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"></highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00157" kindref="compound">DescriptorLayoutBuilder</ref><sp/>layoutBuilder;</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/>layoutBuilder.<ref refid="a00157_1afc94cce99812e98162990b38dc7a2fd0" kindref="member">addBinding</ref>(0,VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER);</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/>layoutBuilder.<ref refid="a00157_1afc94cce99812e98162990b38dc7a2fd0" kindref="member">addBinding</ref>(1,<sp/>VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER);</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/>layoutBuilder.<ref refid="a00157_1afc94cce99812e98162990b38dc7a2fd0" kindref="member">addBinding</ref>(2,<sp/>VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER);</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00193_1a269aa1b48852004420322491f8e03e4a" kindref="member">materialLayout</ref><sp/>=<sp/>layoutBuilder.<ref refid="a00157_1a797241e8070455929166f95a9de86163" kindref="member">build</ref>(engine-&gt;<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/>VK_SHADER_STAGE_VERTEX_BIT<sp/>|<sp/>VK_SHADER_STAGE_FRAGMENT_BIT);</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/>VkDescriptorSetLayout<sp/>layouts[]<sp/>=<sp/>{<sp/>engine-&gt;<ref refid="a00217_1a52aa7ad2d968f8dac3c98fe8e5f4a0ed" kindref="member">_gpuSceneDataDescriptorLayout</ref>,</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00193_1a269aa1b48852004420322491f8e03e4a" kindref="member">materialLayout</ref><sp/>};</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"></highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/>VkPipelineLayoutCreateInfo<sp/>mesh_layout_info<sp/>=<sp/><ref refid="a00102_1ae22d46467876562f521852203947a73c" kindref="member">VkInit::pipelineLayoutCreateInfo</ref>();</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh_layout_info.setLayoutCount<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh_layout_info.pSetLayouts<sp/>=<sp/>layouts;</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh_layout_info.pPushConstantRanges<sp/>=<sp/>&amp;matrixRange;</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh_layout_info.pushConstantRangeCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"></highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/>VkPipelineLayout<sp/>newLayout;</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00074_1a3d55e176cc77828a9adaa05ac4413b99" kindref="member">VK_CHECK</ref>(vkCreatePipelineLayout(engine-&gt;<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/>&amp;mesh_layout_info,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>&amp;newLayout));</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"></highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00193_1a14e8a4c07862539d98a1793cf7be2e24" kindref="member">opaquePipeline</ref>.<ref refid="a00277_1a54c031a905193c1d35539d1566775f00" kindref="member">layout</ref><sp/>=<sp/>newLayout;</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00193_1a20a1e6318217b3d3e63e91439022a4d8" kindref="member">transparentPipeline</ref>.<ref refid="a00277_1a54c031a905193c1d35539d1566775f00" kindref="member">layout</ref><sp/>=<sp/>newLayout;</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"></highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>build<sp/>the<sp/>stage-create-info<sp/>for<sp/>both<sp/>vertex<sp/>and<sp/>fragment<sp/>stages.<sp/>This<sp/>lets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>pipeline<sp/>know<sp/>the<sp/>shader<sp/>modules<sp/>per<sp/>stage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00245" kindref="compound">PipelineBuilder</ref><sp/>pipelineBuilder;</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"></highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/>pipelineBuilder.<ref refid="a00245_1a2228754d15d46e04d91c45974282716a" kindref="member">setShaders</ref>(meshVertexShader,<sp/>meshFragShader);</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"></highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/>pipelineBuilder.<ref refid="a00245_1ac64ce97ba92f9226bbb11ce387b52661" kindref="member">setInputToplogy</ref>(VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST);</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"></highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/>pipelineBuilder.<ref refid="a00245_1a692362aaf0f61503d00b0f4ff5cfb134" kindref="member">setPolygonMode</ref>(VK_POLYGON_MODE_FILL);</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"></highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/>pipelineBuilder.<ref refid="a00245_1a4bba978feda490ecd639e05cf5df0dad" kindref="member">setCullMode</ref>(VK_CULL_MODE_NONE,<sp/>VK_FRONT_FACE_CLOCKWISE);</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"></highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/>pipelineBuilder.<ref refid="a00245_1a586cf4dd2fa96f3a3e546ed5ee9aae0d" kindref="member">setMultisamplingNone</ref>();</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"></highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/>pipelineBuilder.<ref refid="a00245_1a647ed08fe336a4e19382e20f6dfe8c51" kindref="member">disableBlending</ref>();</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"></highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/>pipelineBuilder.<ref refid="a00245_1a4ebe0b6e3f37ac498322d7dda1ec8a2d" kindref="member">enableDepthtest</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>VK_COMPARE_OP_GREATER_OR_EQUAL);</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"></highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//render<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/>pipelineBuilder.<ref refid="a00245_1a98e8a722b30d50f7f9e224172a768061" kindref="member">setColorAttachmentFormat</ref>(engine-&gt;<ref refid="a00217_1ad332e0c9421b787d1805a642c6a04c70" kindref="member">_drawImage</ref>.<ref refid="a00289_1ae4ccf662c664f3b9bdafa7459b746d8b" kindref="member">imageFormat</ref>);</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/>pipelineBuilder.<ref refid="a00245_1a8e9c83acd93cfcb0e9e21024d75c27cd" kindref="member">setDepthFormat</ref>(engine-&gt;<ref refid="a00217_1a20eff0d0f15bd84d364edb01d8cb340d" kindref="member">_depthImage</ref>.<ref refid="a00289_1ae4ccf662c664f3b9bdafa7459b746d8b" kindref="member">imageFormat</ref>);</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"></highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>the<sp/>triangle<sp/>layout<sp/>we<sp/>created</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/>pipelineBuilder.<ref refid="a00245_1a27a3416b889bde0dcce7c28bbb15ed46" kindref="member">_pipelineLayout</ref><sp/>=<sp/>newLayout;</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"></highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>finally<sp/>build<sp/>the<sp/>pipeline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00193_1a14e8a4c07862539d98a1793cf7be2e24" kindref="member">opaquePipeline</ref>.<ref refid="a00277_1a5500b751b3a9fb3017151b515b577ad7" kindref="member">pipeline</ref><sp/>=<sp/>pipelineBuilder.<ref refid="a00245_1ab68e37be1873638547e1912ee287a19e" kindref="member">buildPipeline</ref>(engine-&gt;<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>);</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"></highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>the<sp/>transparent<sp/>variant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/>pipelineBuilder.<ref refid="a00245_1aa8a8b5d264a156de7a8beea3508723c8" kindref="member">enableBlendingAdditive</ref>();</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"></highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/>pipelineBuilder.<ref refid="a00245_1a4ebe0b6e3f37ac498322d7dda1ec8a2d" kindref="member">enableDepthtest</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>VK_COMPARE_OP_GREATER_OR_EQUAL);</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"></highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00193_1a20a1e6318217b3d3e63e91439022a4d8" kindref="member">transparentPipeline</ref>.<ref refid="a00277_1a5500b751b3a9fb3017151b515b577ad7" kindref="member">pipeline</ref><sp/>=<sp/>pipelineBuilder.<ref refid="a00245_1ab68e37be1873638547e1912ee287a19e" kindref="member">buildPipeline</ref>(engine-&gt;<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>);</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"></highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/>vkDestroyShaderModule(engine-&gt;<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/>meshFragShader,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/>vkDestroyShaderModule(engine-&gt;<ref refid="a00217_1ab3856636bf2bd4805f72b852c2163f10" kindref="member">_device</ref>,<sp/>meshVertexShader,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1538"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"></highlight></codeline>
<codeline lineno="1540"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a00193_1acdddc2beb7cc303daabfa28404afa2c9" kindref="member">GLTFMetallic_roughness::clearResources</ref>(VkDevice<sp/>device)<sp/>{</highlight></codeline>
<codeline lineno="1542"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"></highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><ref refid="a00281" kindref="compound">MaterialInstance</ref><sp/><ref refid="a00193_1a744d03ddb8fe03ea8ee07f2ae3b42de5" kindref="member">GLTFMetallic_roughness::writeMaterial</ref>(VkDevice<sp/>device,<sp/><ref refid="a00074_1a5d0f6bec114ddc0ce218cc9986d7bcac" kindref="member">MaterialPass</ref><sp/>pass,</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="a00201" kindref="compound">GLTFMetallic_roughness::MaterialResources</ref><sp/>&amp;resources,</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00169" kindref="compound">DescriptorAllocatorGrowable</ref><sp/>descriptorAllocator)<sp/>{</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"></highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00281" kindref="compound">MaterialInstance</ref><sp/>matData;</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/>matData.<ref refid="a00281_1ab6a8270117524873601400f0bcb401db" kindref="member">passType</ref><sp/>=<sp/>pass;</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pass<sp/>==<sp/><ref refid="a00074_1a5d0f6bec114ddc0ce218cc9986d7bcacac719d3f34968bcf992d4c0c48841cf63" kindref="member">MaterialPass::Transparent</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matData.<ref refid="a00281_1a6270ec8b9754e8071ad89436e9b307c7" kindref="member">pipeline</ref><sp/>=<sp/>&amp;<ref refid="a00193_1a20a1e6318217b3d3e63e91439022a4d8" kindref="member">transparentPipeline</ref>;</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matData.<ref refid="a00281_1a6270ec8b9754e8071ad89436e9b307c7" kindref="member">pipeline</ref><sp/>=<sp/>&amp;<ref refid="a00193_1a14e8a4c07862539d98a1793cf7be2e24" kindref="member">opaquePipeline</ref>;</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"></highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/>matData.<ref refid="a00281_1a0d388ba1aded5dcdd49c622a51e1bf92" kindref="member">materialSet</ref><sp/>=<sp/>descriptorAllocator.<ref refid="a00169_1a6db84a1399339f8008d6a0745383b591" kindref="member">allocate</ref>(device,<sp/><ref refid="a00193_1a269aa1b48852004420322491f8e03e4a" kindref="member">materialLayout</ref>);</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"></highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00193_1a90094ab356bc8a5426f8012f76c1326f" kindref="member">writer</ref>.<ref refid="a00177_1ad2f603a5f4382aeed806d6a25f4fc9d9" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00193_1a90094ab356bc8a5426f8012f76c1326f" kindref="member">writer</ref>.<ref refid="a00177_1a24d1efff56cfd0a03ffe5aa3ce7e17bf" kindref="member">writeBuffer</ref>(0,<sp/>resources.<ref refid="a00201_1af0402d122ad15ba381be88d540c77fa7" kindref="member">dataBuffer</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(MaterialConstants),<sp/>resources.<ref refid="a00201_1a7f4e87b350163adac17d662bef1eab3b" kindref="member">dataBufferOffset</ref>,<sp/>VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER);</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00193_1a90094ab356bc8a5426f8012f76c1326f" kindref="member">writer</ref>.<ref refid="a00177_1a2a892146e50f1e47f2e5e2f84fb0eb66" kindref="member">writeImage</ref>(1,<sp/>resources.<ref refid="a00201_1a3dd3a1bd7517a31b58583f30940c3441" kindref="member">colorImage</ref>.<ref refid="a00289_1ad124234921b26ec7e9b0cc5f603d5726" kindref="member">imageView</ref>,<sp/>resources.<ref refid="a00201_1a14de3bb8c602f204bcf5d6c2ccb7ee2a" kindref="member">colorSampler</ref>,<sp/>VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL,<sp/>VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER);</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00193_1a90094ab356bc8a5426f8012f76c1326f" kindref="member">writer</ref>.<ref refid="a00177_1a2a892146e50f1e47f2e5e2f84fb0eb66" kindref="member">writeImage</ref>(2,<sp/>resources.<ref refid="a00201_1af7791b1215a1fee0b5897e1d39a3c9ed" kindref="member">metalRoughImage</ref>.<ref refid="a00289_1ad124234921b26ec7e9b0cc5f603d5726" kindref="member">imageView</ref>,<sp/>resources.<ref refid="a00201_1aad3abdd50028f1774271881c1de7dc85" kindref="member">metalRoughSampler</ref>,<sp/>VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL,<sp/>VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER);</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"></highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00193_1a90094ab356bc8a5426f8012f76c1326f" kindref="member">writer</ref>.<ref refid="a00177_1aa6d2deed567c313417fc333e55647814" kindref="member">updateSet</ref>(device,<sp/>matData.<ref refid="a00281_1a0d388ba1aded5dcdd49c622a51e1bf92" kindref="member">materialSet</ref>);</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"></highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>matData;</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"></highlight></codeline>
<codeline lineno="1567"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"></highlight></codeline>
<codeline lineno="1569"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a00193_1a96ff6cb8fd8d01b16921be3900827939" kindref="member">GLTFMetallic_roughness::destroy</ref>(VkDevice<sp/>device,<sp/><ref refid="a00074_1a5d0f6bec114ddc0ce218cc9986d7bcac" kindref="member">MaterialPass</ref><sp/>pass)<sp/>{</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/>vkDestroyDescriptorSetLayout(device,<sp/><ref refid="a00193_1a269aa1b48852004420322491f8e03e4a" kindref="member">materialLayout</ref>,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/>vkDestroyPipeline(device,<sp/><ref refid="a00193_1a20a1e6318217b3d3e63e91439022a4d8" kindref="member">transparentPipeline</ref>.<ref refid="a00277_1a5500b751b3a9fb3017151b515b577ad7" kindref="member">pipeline</ref>,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/>vkDestroyPipeline(device,<sp/><ref refid="a00193_1a14e8a4c07862539d98a1793cf7be2e24" kindref="member">opaquePipeline</ref>.<ref refid="a00277_1a5500b751b3a9fb3017151b515b577ad7" kindref="member">pipeline</ref>,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"></highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pass<sp/>==<sp/><ref refid="a00074_1a5d0f6bec114ddc0ce218cc9986d7bcacac719d3f34968bcf992d4c0c48841cf63" kindref="member">MaterialPass::Transparent</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkDestroyPipelineLayout(device,<sp/><ref refid="a00193_1a20a1e6318217b3d3e63e91439022a4d8" kindref="member">transparentPipeline</ref>.<ref refid="a00277_1a54c031a905193c1d35539d1566775f00" kindref="member">layout</ref>,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vkDestroyPipelineLayout(device,<sp/><ref refid="a00193_1a14e8a4c07862539d98a1793cf7be2e24" kindref="member">opaquePipeline</ref>.<ref refid="a00277_1a54c031a905193c1d35539d1566775f00" kindref="member">layout</ref>,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1579"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"></highlight></codeline>
<codeline lineno="1581"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="a00213_1a8d5ed2175240d27f97e058508b110b51" kindref="member">MeshNode::Draw</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>glm::mat4<sp/>&amp;topMatrix,<sp/><ref refid="a00209" kindref="compound">DrawContext</ref><sp/>&amp;ctx)<sp/>{</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"></highlight></codeline>
<codeline lineno="1583"><highlight class="normal"></highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/>glm::mat4<sp/>nodeMatrix<sp/>=<sp/>topMatrix<sp/>*<sp/><ref refid="a00237_1a080e37187a37353df15596dc9250e700" kindref="member">worldTransform</ref>;</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"></highlight></codeline>
<codeline lineno="1586"><highlight class="normal"></highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>s:<sp/><ref refid="a00213_1aad4716b73a0170c5a9af5b58f429ef5a" kindref="member">mesh</ref>-&gt;surfaces)<sp/>{</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="a00205" kindref="compound">RenderObject</ref><sp/>def;</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>def.<ref refid="a00205_1ad804e3c297d2f4d5ea1aabc80f3a2801" kindref="member">indexCount</ref><sp/>=<sp/>s.count;</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>def.<ref refid="a00205_1ac0d57e3a8ec65b53d2593224161ace73" kindref="member">firstIndex</ref><sp/>=<sp/>s.startIndex;</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>def.<ref refid="a00205_1a30d8bb5f11112733abf3fa034f65f80c" kindref="member">indexBuffer</ref><sp/>=<sp/><ref refid="a00213_1aad4716b73a0170c5a9af5b58f429ef5a" kindref="member">mesh</ref>-&gt;meshBuffers.indexBuffer.buffer;</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>def.<ref refid="a00205_1ab09c067290de5759d715bfea4487fcf6" kindref="member">material</ref><sp/>=<sp/>&amp;s.material-&gt;data;</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>def.<ref refid="a00205_1a14bf8548f4c7a416e787a3508f833a50" kindref="member">bounds</ref><sp/>=<sp/>s.bounds;</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"></highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>def.<ref refid="a00205_1a5aa60e9c01b069dcddebd1a913e0999c" kindref="member">transform</ref><sp/>=<sp/>nodeMatrix;</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>def.<ref refid="a00205_1a2cb78112987761ab014ca3095c3b0dbf" kindref="member">vertexBufferAddress</ref><sp/>=<sp/><ref refid="a00213_1aad4716b73a0170c5a9af5b58f429ef5a" kindref="member">mesh</ref>-&gt;meshBuffers.vertexBufferAddress;</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"></highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.material-&gt;data.passType<sp/>==<sp/><ref refid="a00074_1a5d0f6bec114ddc0ce218cc9986d7bcacac719d3f34968bcf992d4c0c48841cf63" kindref="member">MaterialPass::Transparent</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx.<ref refid="a00209_1ad057160f65e0657e137a740ec37d31c2" kindref="member">TransparentSurfaces</ref>.push_back(def);</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx.<ref refid="a00209_1a92fc7232c72c6f3b5dc4e12dd6606f17" kindref="member">OpaqueSurfaces</ref>.push_back(def);</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"></highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"></highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="a00237_1a6870e549c7f428dbcd4f61d43eaa2f4b" kindref="member">Node::Draw</ref>(topMatrix,<sp/>ctx);</highlight></codeline>
<codeline lineno="1607"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/allos/source/Catos/Runtime/src/Renderer/VkEngine.cpp"/>
  </compounddef>
</doxygen>
